{"version":3,"file":"stimulus-library.module.js","sources":["../src/async_block_controller.ts","../src/auto_submit_form_controller.ts","../node_modules/stimulus-use/dist/support/index.js","../node_modules/stimulus-use/dist/use-intersection/use-intersection.js","../node_modules/stimulus-use/dist/use-click-outside/use-click-outside.js","../node_modules/stimulus-use/dist/stimulus_use.js","../node_modules/stimulus-use/dist/use-hover/use-hover.js","../node_modules/stimulus-use/dist/use-mutation/use-mutation.js","../node_modules/stimulus-use/dist/use-window-resize/use-window-resize.js","../node_modules/stimulus-use/dist/use-debounce/use-debounce.js","../src/autosize_controller.ts","../src/char_count_controller.ts","../src/clipboard_controller.ts","../src/confirm_navigation_controller.ts","../src/debug_controller.ts","../src/detect_dirty_controller.ts","../src/disable_inputs_controller.ts","../src/dismissable_controller.ts","../src/empty_dom_controller.ts","../src/enable_inputs_controller.ts","../src/fallback_image_controller.ts","../src/lazy_block_controller.ts","../src/limited_selection_checkboxes_controller.ts","../src/password_confirm_controller.ts","../src/password_peek_controller.ts","../src/responsive_iframe_controller.ts","../src/utilities/ephemeral_controller.ts","../src/scroll_into_focus_controller.ts","../src/self_destruct_controller.ts","../src/teleport_controller.ts","../src/toggle_class_controller.ts","../src/word_count_controller.ts"],"sourcesContent":["import {Controller} from \"stimulus\";\n\nexport class AsyncBlockController extends Controller {\n  static targets = [\"replace\"];\n  static values = {endpoint: String};\n\n  declare readonly replaceTarget: HTMLElement;\n  declare readonly hasReplaceTarget: boolean;\n  declare readonly endpointValue: string;\n\n\n  // This is a simple controller to load a block of content when the page loads.\n  // It should be used to give a quick initial response before calling out to an\n  // an AJAX endpoint to do some expensive work.\n  connect() {\n    this.loadContent();\n  }\n\n  loadContent() {\n    let el = (this.hasReplaceTarget ? this.replaceTarget : this.element) as HTMLElement;\n    fetch(this.endpointValue)\n    .then((response) => response.text())\n    .then((html) => {\n      let newEl = document.createElement(\"div\");\n      newEl.innerHTML = html;\n      el.replaceWith(newEl);\n\n      // Trigger event to show block has loaded\n      let event = new CustomEvent(\"ajax:success\", {\"detail\": \"\"});\n      el.dispatchEvent(event);\n    })\n    .catch(err => {\n      el.replaceWith(\"Sorry, this content failed to load\");\n\n      let event = new CustomEvent(\"ajax:error\", {\"detail\": \"\"});\n      el.dispatchEvent(event);\n    })\n    .finally(() => {\n      let event = new CustomEvent(\"ajax:complete\", {\"detail\": \"\"});\n      el.dispatchEvent(event);\n    });\n  }\n}\n","import {Controller} from \"stimulus\";\n\nexport class AutoSubmitFormController extends Controller {\n\n  private boundHandler = this.handler.bind(this);\n\n  connect() {\n    (this.element as HTMLElement).querySelectorAll(\"input, select, textarea\").forEach(el => el.addEventListener(\"change\", this.boundHandler));\n  }\n\n  disconnect() {\n    (this.element as HTMLElement).querySelectorAll(\"input, select, textarea\").forEach(el => el.removeEventListener(\"change\", this.boundHandler));\n  }\n\n  private handler(e: Event) {\n    // this.element.submit()\n    // Moved to this to support remote forms and CSRF properly\n    this.element.dispatchEvent(\n      new CustomEvent(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n      }),\n    );\n  }\n}\n","export const method = (controller, methodName) => {\n    const method = controller[methodName];\n    if (typeof method == 'function') {\n        return method;\n    }\n    else {\n        return (...args) => { };\n    }\n};\nexport const composeEventName = (name, controller, eventPrefix) => {\n    let composedName = name;\n    if (eventPrefix === true) {\n        composedName = `${controller.identifier}:${name}`;\n    }\n    else if (typeof eventPrefix === 'string') {\n        composedName = `${eventPrefix}:${name}`;\n    }\n    return composedName;\n};\nexport const extendedEvent = (type, event, detail) => {\n    const { bubbles, cancelable, composed } = event || { bubbles: true, cancelable: true, composed: true };\n    if (event) {\n        Object.assign(detail, { originalEvent: event });\n    }\n    const customEvent = new CustomEvent(type, {\n        bubbles,\n        cancelable,\n        composed,\n        detail,\n    });\n    return customEvent;\n};\nexport function isElementInViewport(el) {\n    const rect = el.getBoundingClientRect();\n    const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n    const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n    const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n    const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) >= 0);\n    return (vertInView && horInView);\n}\n//# sourceMappingURL=index.js.map","import { method, extendedEvent, composeEventName } from '../support/index';\nconst defaultOptions = {\n    dispatchEvent: true,\n    eventPrefix: true,\n};\nexport const useIntersection = (controller, options = {}) => {\n    const { dispatchEvent, eventPrefix } = Object.assign({}, defaultOptions, options);\n    const targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n    const callback = (entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n            dispatchAppear(entry);\n        }\n        else if (controller.isVisible) {\n            dispatchDisappear(entry);\n        }\n    };\n    const dispatchAppear = (entry) => {\n        controller.isVisible = true;\n        method(controller, 'appear').call(controller, entry);\n        // emit a custom \"appear\" event\n        if (dispatchEvent) {\n            const eventName = composeEventName('appear', controller, eventPrefix);\n            const appearEvent = extendedEvent(eventName, null, { controller, entry });\n            targetElement.dispatchEvent(appearEvent);\n        }\n    };\n    const dispatchDisappear = (entry) => {\n        controller.isVisible = false;\n        method(controller, 'disappear').call(controller, entry);\n        // emit a custom \"disappear\" event\n        if (dispatchEvent) {\n            const eventName = composeEventName('disappear', controller, eventPrefix);\n            const disappearEvent = extendedEvent(eventName, null, { controller, entry });\n            targetElement.dispatchEvent(disappearEvent);\n        }\n    };\n    // keep a copy of the current disconnect() function of the controller\n    // to support composing several behaviors\n    const controllerDisconnect = controller.disconnect.bind(controller);\n    const observer = new IntersectionObserver(callback, options);\n    const observe = () => {\n        observer.observe(targetElement);\n    };\n    const unobserve = () => {\n        observer.unobserve(targetElement);\n    };\n    Object.assign(controller, {\n        isVisible: false,\n        disconnect() {\n            unobserve();\n            controllerDisconnect();\n        },\n    });\n    observe();\n    return [observe, unobserve];\n};\n//# sourceMappingURL=use-intersection.js.map","import { composeEventName, extendedEvent, isElementInViewport } from '../support/index';\nconst defaultOptions = {\n    events: ['click', 'touchend'],\n    onlyVisible: true,\n    dispatchEvent: true,\n    eventPrefix: true,\n};\nexport const useClickOutside = (controller, options = {}) => {\n    const { onlyVisible, dispatchEvent, events, eventPrefix } = Object.assign({}, defaultOptions, options);\n    const onEvent = (event) => {\n        const targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n        if (targetElement.contains(event.target) || (!isElementInViewport(targetElement) && onlyVisible)) {\n            return;\n        }\n        // call the clickOutside method of the Stimulus controller\n        if (controller.clickOutside) {\n            controller.clickOutside(event);\n        }\n        // emit a custom event\n        if (dispatchEvent) {\n            const eventName = composeEventName('click:outside', controller, eventPrefix);\n            const clickOutsideEvent = extendedEvent(eventName, event, { controller });\n            targetElement.dispatchEvent(clickOutsideEvent);\n        }\n    };\n    const observe = () => {\n        events === null || events === void 0 ? void 0 : events.forEach(event => {\n            window.addEventListener(event, onEvent, false);\n        });\n    };\n    const unobserve = () => {\n        events === null || events === void 0 ? void 0 : events.forEach(event => {\n            window.removeEventListener(event, onEvent, false);\n        });\n    };\n    // keep a copy of the current disconnect() function of the controller\n    // to support composing several behaviors\n    const controllerDisconnect = controller.disconnect.bind(controller);\n    Object.assign(controller, {\n        disconnect() {\n            unobserve();\n            controllerDisconnect();\n        },\n    });\n    observe();\n    return [observe, unobserve];\n};\n//# sourceMappingURL=use-click-outside.js.map","const defaultOptions = {\n    debug: false,\n    logger: console\n};\nexport class StimulusUse {\n    constructor(controller, options = {}) {\n        var _a, _b, _c;\n        this.log = (functionName, args) => {\n            if (!this.debug)\n                return;\n            this.logger.groupCollapsed(`%c${this.controller.identifier} %c#${functionName}`, 'color: #3B82F6', 'color: unset');\n            this.logger.log(Object.assign({ controllerId: this.controllerId }, args));\n            this.logger.groupEnd();\n        };\n        this.debug = (_b = (_a = options === null || options === void 0 ? void 0 : options.debug) !== null && _a !== void 0 ? _a : controller.application.stimulusUseDebug) !== null && _b !== void 0 ? _b : defaultOptions.debug;\n        this.logger = (_c = options === null || options === void 0 ? void 0 : options.logger) !== null && _c !== void 0 ? _c : defaultOptions.logger;\n        this.controller = controller;\n        this.controllerId = controller.element.id || controller.element.dataset.id;\n        // make copies of lifecycle functions\n        this.controllerInitialize = controller.initialize.bind(controller);\n        this.controllerConnect = controller.connect.bind(controller);\n        this.controllerDisconnect = controller.disconnect.bind(controller);\n    }\n}\n//# sourceMappingURL=stimulus_use.js.map","import { StimulusUse } from '../stimulus_use';\nimport { method } from '../support/index';\nexport class UseHover extends StimulusUse {\n    constructor(controller, options = {}) {\n        super(controller, options);\n        this.observe = () => {\n            this.targetElement.addEventListener('mouseenter', this.onEnter);\n            this.targetElement.addEventListener('mouseleave', this.onLeave);\n        };\n        this.unobserve = () => {\n            this.targetElement.removeEventListener('mouseenter', this.onEnter);\n            this.targetElement.removeEventListener('mouseleave', this.onLeave);\n        };\n        this.onEnter = () => {\n            method(this.controller, 'mouseEnter').call(this.controller);\n            this.log('mouseEnter', { hover: true });\n        };\n        this.onLeave = () => {\n            method(this.controller, 'mouseLeave').call(this.controller);\n            this.log('mouseLeave', { hover: false });\n        };\n        this.targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n        this.controller = controller;\n        this.enhanceController();\n        this.observe();\n    }\n    enhanceController() {\n        const controllerDisconnect = this.controller.disconnect.bind(this.controller);\n        const disconnect = () => {\n            this.unobserve();\n            controllerDisconnect();\n        };\n        Object.assign(this.controller, { disconnect });\n    }\n}\nexport const useHover = (controller, options = {}) => {\n    const observer = new UseHover(controller, options);\n    return [observer.observe, observer.unobserve];\n};\n//# sourceMappingURL=use-hover.js.map","import { StimulusUse } from '../stimulus_use';\nimport { method } from '../support/index';\nexport class UseMutation extends StimulusUse {\n    constructor(controller, options = {}) {\n        super(controller, options);\n        this.observe = () => {\n            try {\n                this.observer.observe(this.targetElement, this.options);\n            }\n            catch (error) {\n                this.controller.application.handleError(error, \"At a minimum, one of childList, attributes, and/or characterData must be true\", {});\n            }\n        };\n        this.unobserve = () => {\n            this.observer.disconnect();\n        };\n        this.mutation = (entries) => {\n            method(this.controller, 'mutate').call(this.controller, entries);\n            this.log('mutate', { entries });\n        };\n        this.targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n        this.controller = controller;\n        this.options = options;\n        this.observer = new MutationObserver(this.mutation);\n        this.enhanceController();\n        this.observe();\n    }\n    enhanceController() {\n        const controllerDisconnect = this.controller.disconnect.bind(this.controller);\n        const disconnect = () => {\n            this.unobserve();\n            controllerDisconnect();\n        };\n        Object.assign(this.controller, { disconnect });\n    }\n}\nexport const useMutation = (controller, options = {}) => {\n    const observer = new UseMutation(controller, options);\n    return [observer.observe, observer.unobserve];\n};\n//# sourceMappingURL=use-mutation.js.map","import { method } from '../support/index';\nexport const useWindowResize = (controller) => {\n    const callback = (event) => {\n        const { innerWidth, innerHeight } = window;\n        const payload = {\n            height: innerHeight || Infinity,\n            width: innerWidth || Infinity,\n            event\n        };\n        method(controller, 'windowResize').call(controller, payload);\n    };\n    const controllerDisconnect = controller.disconnect.bind(controller);\n    const observe = () => {\n        window.addEventListener('resize', callback);\n        callback();\n    };\n    const unobserve = () => {\n        window.removeEventListener('resize', callback);\n    };\n    Object.assign(controller, {\n        disconnect() {\n            unobserve();\n            controllerDisconnect();\n        },\n    });\n    observe();\n    return [observe, unobserve];\n};\n//# sourceMappingURL=use-window-resize.js.map","import { Controller } from 'stimulus';\nclass DebounceController extends Controller {\n}\nDebounceController.debounces = [];\nconst defaultWait = 200;\nconst debounce = (fn, wait = defaultWait) => {\n    let timeoutId = null;\n    return function () {\n        const args = arguments;\n        const context = this;\n        const callback = () => fn.apply(context, args);\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(callback, wait);\n    };\n};\nexport const useDebounce = (controller, options) => {\n    var _a;\n    const constructor = controller.constructor;\n    (_a = constructor.debounces) === null || _a === void 0 ? void 0 : _a.forEach((func) => {\n        if (typeof func === \"string\") {\n            controller[func] = debounce(controller[func], options === null || options === void 0 ? void 0 : options.wait);\n        }\n        if (typeof func === \"object\") {\n            const { name, wait } = func;\n            if (!name)\n                return;\n            controller[name] = debounce(controller[name], wait || (options === null || options === void 0 ? void 0 : options.wait));\n        }\n    });\n};\n//# sourceMappingURL=use-debounce.js.map","import {Controller} from \"stimulus\";\nimport {useWindowResize} from \"stimulus-use\";\n\nexport class AutosizeController extends Controller {\n\n  private boundHandler = this.handler.bind(this);\n  declare observe: () => void;\n  declare unobserve: () => void;\n\n  connect() {\n    let target = this.element as HTMLTextAreaElement;\n    target.style.resize = \"none\";\n    target.style.boxSizing = \"border-box\";\n    target.addEventListener(\"input\", this.boundHandler);\n    target.addEventListener(\"focus\", this.boundHandler);\n    useWindowResize(this);\n    requestAnimationFrame(this.boundHandler);\n  }\n\n  windowResize() {\n    this.handler();\n  }\n\n  private handler() {\n    this.autosize(this.element as HTMLTextAreaElement);\n  };\n\n  private autosize(element: HTMLTextAreaElement) {\n    let offset = element.offsetHeight - element.clientHeight;\n    element.style.height = \"auto\";\n    element.style.height = element.scrollHeight + offset + \"px\";\n  }\n\n}\n","import {Controller} from \"stimulus\";\r\n\r\nexport class CharCountController extends Controller {\r\n\r\n  static targets = [\"input\", \"output\"];\r\n  static values = {min: Number, max: Number};\r\n  static classes = [\"error\"];\r\n\r\n  declare readonly inputTarget: HTMLInputElement | HTMLTextAreaElement;\r\n  declare readonly outputTarget: HTMLElement;\r\n  declare minValue: number;\r\n  declare hasMinValue: boolean;\r\n  declare maxValue: number;\r\n  declare hasMaxValue: boolean;\r\n  declare errorClass: string;\r\n  declare hasErrorClass: boolean;\r\n\r\n  boundHandler = this.updateCharCount.bind(this);\r\n\r\n  connect() {\r\n    this.updateCharCount();\r\n    this.inputTarget.addEventListener(\"input\", this.boundHandler);\r\n  }\r\n\r\n  disconnect() {\r\n    this.inputTarget.removeEventListener(\"input\", this.boundHandler);\r\n  }\r\n\r\n  updateCharCount() {\r\n    let charCount = this.inputTarget.value.length;\r\n    this.outputTarget.innerText = charCount.toString();\r\n    if (this.hasErrorClass) {\r\n      if (this.isValidCount(charCount)) {\r\n        this.outputTarget.classList.remove(this.errorClass);\r\n      } else {\r\n        this.outputTarget.classList.add(this.errorClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  isValidCount(count: number) {\r\n    let min = 0;\r\n    let max = 99999;\r\n\r\n    if (this.hasMinValue) {\r\n      min = this.minValue;\r\n    }\r\n\r\n    if (this.hasMaxValue) {\r\n      max = this.maxValue;\r\n    }\r\n\r\n    return count >= min && count <= max;\r\n  }\r\n\r\n}\r\n","import {Controller} from \"stimulus\";\r\n\r\nexport class ClipboardController extends Controller {\r\n\r\n  static targets = [\"button\", \"copy\", \"fallback\"];\r\n  static values = {removeUnused: Boolean};\r\n\r\n  declare readonly sourceTarget: HTMLElement;\r\n  declare readonly copyTarget: HTMLElement;\r\n  declare readonly hasCopyTarget: boolean;\r\n  declare readonly fallbackTarget: HTMLElement;\r\n  declare readonly hasFallbackTarget: boolean;\r\n\r\n  declare readonly hasRemoveUnusedValue: boolean;\r\n  declare readonly removeUnusedValue: boolean;\r\n\r\n  supported = false;\r\n\r\n  connect() {\r\n    this.supported = document.queryCommandSupported(\"copy\");\r\n\r\n    if (this.hasRemoveUnusedValue && this.removeUnusedValue) {\r\n      if (this.supported && this.hasFallbackTarget) {\r\n        this.fallbackTarget.remove();\r\n      } else if (this.hasCopyTarget) {\r\n        this.copyTarget.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  select(event: MouseEvent) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    (this.sourceTarget as HTMLInputElement | HTMLTextAreaElement).select();\r\n  }\r\n\r\n  copy(event: ClipboardEvent) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    (this.sourceTarget as HTMLInputElement | HTMLTextAreaElement).select();\r\n    if (this.supported) {\r\n      document.execCommand(\"copy\");\r\n    }\r\n  }\r\n}\r\n","import {Controller} from \"stimulus\";\r\n\r\nexport class ConfirmNavigationController extends Controller {\r\n\r\n  static values = {message: String}\r\n\r\n  declare readonly messageValue: string;\r\n\r\n  connect() {\r\n    let confirmMessage = this.messageValue;\r\n    window.onbeforeunload = () => (confirmMessage == null ? true : confirmMessage);\r\n    window.addEventListener(\"popstate\", this.handlePopstate);\r\n    window.addEventListener(\"submit\", () => {\r\n      window.removeEventListener(\"popstate\", this.handlePopstate);\r\n      window.onbeforeunload = null;\r\n    });\r\n    // TODO: Turbo navigation events\r\n  }\r\n\r\n  handlePopstate(event: PopStateEvent) {\r\n    return false;\r\n  }\r\n\r\n}\r\n","import {Controller} from \"stimulus\";\r\n\r\nexport class DebugController extends Controller {\r\n\r\n  static targets = [\"test\"];\r\n  declare testTargets: HTMLElement[];\r\n\r\n  connect() {\r\n    console.log('Debug Controller', this, this.testTargets);\r\n  }\r\n\r\n}\r\n","import {Controller} from \"stimulus\";\r\n\r\nexport class DetectDirtyController extends Controller {\r\n\r\n  initialValue: string | boolean | null = null;\r\n\r\n  boundHandler = this.handler.bind(this);\r\n\r\n  connect() {\r\n    let element = this.element as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    if (this.isInputElement(element) && this.isCheckable(element)) {\r\n      this.initialValue = element.checked;\r\n    } else {\r\n      this.initialValue = element.value;\r\n    }\r\n    element.addEventListener(\"input\", this.boundHandler);\r\n    element.addEventListener(\"change\", this.boundHandler);\r\n  }\r\n\r\n  disconnect() {\r\n    let element = this.element as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    element.removeEventListener(\"input\", this.boundHandler);\r\n    element.removeEventListener(\"change\", this.boundHandler);\r\n  }\r\n\r\n  restore() {\r\n    let element = this.element as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    if (this.isInputElement(element) && this.isCheckable(element)) {\r\n      element.checked = this.initialValue as boolean;\r\n    } else {\r\n      element.value = this.initialValue as string;\r\n    }\r\n  }\r\n\r\n  private handler(event?: Event) {\r\n    let element = this.element as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n\r\n    if (this.initialValue !== element.value) {\r\n      element.setAttribute(\"data-dirty\", \"true\");\r\n    } else {\r\n      element.removeAttribute(\"data-dirty\");\r\n    }\r\n  }\r\n\r\n  private isCheckable(element: HTMLInputElement): boolean {\r\n    return (element.type === \"radio\" || element.type === \"checkbox\");\r\n  }\r\n\r\n  private isInputElement(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): element is HTMLInputElement {\r\n    return element.tagName === \"INPUT\";\r\n  }\r\n\r\n}\r\n\r\nexport function isDirty(element: HTMLElement) {\r\n  return element.hasAttribute(\"data-dirty\");\r\n}\r\n","import {Controller} from \"stimulus\";\r\n\r\nexport class DisableInputsController extends Controller {\r\n\r\n  static targets = [\"disabler\", \"disable\"];\r\n\r\n  declare readonly hasDisablerTarget: boolean;\r\n  declare readonly disablerTarget: HTMLInputElement;\r\n  declare readonly disableTargets: Array<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>;\r\n\r\n  connect() {\r\n    this.toggle();\r\n  }\r\n\r\n  toggle() {\r\n    if (this.hasDisablerTarget && this.disablerTarget.checked) {\r\n      this.disableInputs();\r\n    } else {\r\n      this.enableInputs();\r\n    }\r\n  }\r\n\r\n  disableInputs() {\r\n    this.disableTargets.forEach((el, _) => {\r\n      el.disabled = true;\r\n    });\r\n  }\r\n\r\n  enableInputs() {\r\n    this.disableTargets.forEach((el, _) => {\r\n      el.disabled = false;\r\n    });\r\n  }\r\n}\r\n","import {Controller} from \"stimulus\";\r\n\r\nexport class DismissableController extends Controller {\r\n\r\n  dismiss() {\r\n    this.element.remove();\r\n  }\r\n\r\n}\r\n","import {Controller} from \"stimulus\";\r\nimport {useMutation} from \"stimulus-use\";\r\n\r\nexport class EmptyDomController extends Controller {\r\n\r\n  static classes = [\"empty\", \"notEmpty\"];\r\n  static values = {scopeSelector: String};\r\n\r\n  declare hasEmptyClass: boolean;\r\n  declare emptyClass: string;\r\n  declare hasNotEmptyClass: boolean;\r\n  declare notEmptyClass: string;\r\n\r\n  declare hasScopeSelectorValue: boolean;\r\n  declare scopeSelectorValue: string;\r\n\r\n  connect() {\r\n    useMutation(this, {element: this.element, childList: true});\r\n  }\r\n\r\n  mutate(entries: MutationRecord[]) {\r\n    let children;\r\n    if (this.hasScopeSelectorValue) {\r\n      children = this.element.querySelectorAll(this.scopeSelectorValue);\r\n    } else {\r\n      children = this.element.children;\r\n    }\r\n\r\n    if (children.length === 0) {\r\n      if (this.hasNotEmptyClass) {\r\n        let classes = this.notEmptyClass.split(\" \");\r\n        classes.forEach(klass => this.element.classList.remove(klass));\r\n      }\r\n      if (this.hasEmptyClass) {\r\n        let classes = this.emptyClass.split(\" \");\r\n        classes.forEach(klass => this.element.classList.add(klass));\r\n      }\r\n      this.element.dispatchEvent(new CustomEvent(\"dom:empty\", {bubbles: true, cancelable: true}));\r\n    } else {\r\n      if (this.hasNotEmptyClass) {\r\n        let classes = this.notEmptyClass.split(\" \");\r\n        classes.forEach(klass => this.element.classList.add(klass));\r\n      }\r\n      if (this.hasEmptyClass) {\r\n        let classes = this.emptyClass.split(\" \");\r\n        classes.forEach(klass => this.element.classList.remove(klass));\r\n      }\r\n      this.element.dispatchEvent(new CustomEvent(\"dom:not-empty\", {bubbles: true, cancelable: true}));\r\n    }\r\n  }\r\n\r\n}\r\n","import {Controller} from \"stimulus\";\r\n\r\nexport class EnableInputsController extends Controller {\r\n\r\n  static targets = [\"enabler\", \"enable\"];\r\n\r\n  declare readonly hasEnablerTarget: boolean;\r\n  declare readonly enablerTarget: HTMLInputElement;\r\n  declare readonly enableTargets: Array<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>;\r\n\r\n  connect() {\r\n    this.toggle();\r\n  }\r\n\r\n  toggle() {\r\n    if (this.hasEnablerTarget && this.enablerTarget.checked) {\r\n      this.enableInputs();\r\n    } else {\r\n      this.disableInputs();\r\n    }\r\n  }\r\n\r\n  disableInputs() {\r\n    this.enableTargets.forEach((el, _) => {\r\n      el.disabled = true;\r\n    });\r\n  }\r\n\r\n  enableInputs() {\r\n    this.enableTargets.forEach((el, _) => {\r\n      el.disabled = false;\r\n    });\r\n  }\r\n}\r\n","import {Controller} from \"stimulus\";\r\n\r\nexport class FallbackImageController extends Controller {\r\n\r\n  static values = {placeholder: String};\r\n\r\n  declare readonly placeholderValue: string;\r\n  declare readonly hasPlaceholderValue: boolean;\r\n\r\n  connect() {\r\n    let element = this.element as HTMLImageElement;\r\n\r\n    element.onerror = () => {\r\n      if (this.hasPlaceholderValue) {\r\n        element.src = this.placeholderValue;\r\n      } else {\r\n        element.style.display = \"none\";\r\n      }\r\n    };\r\n  }\r\n\r\n}\r\n","import {useIntersection} from \"stimulus-use\";\nimport {IntersectionOptions} from \"stimulus-use/dist/use-intersection/use-intersection\";\nimport {AsyncBlockController} from \"./async_block_controller\";\n\nexport class LazyBlockController extends AsyncBlockController {\n\n  declare observe: () => void;\n  declare unobserve: () => void;\n  declare options: IntersectionOptions;\n  declare isVisible: boolean;\n  declare disappear : () => void;\n\n  connect() {\n    let element = this.element;\n    this.options = {element, threshold: 0.3};\n\n    if (\"IntersectionObserver\" in window) {\n      [this.observe, this.unobserve] = useIntersection(this, this.options);\n    } else {\n      // Client doesn't support intersection observer, fallback to pre-loading\n      this.loadContent();\n    }\n  }\n\n  appear(entry: IntersectionObserverEntry) {\n    let element = this.element as HTMLImageElement;\n    if (element.src !== \"\") {\n      return;\n    }\n    if (entry.target === element && entry.isIntersecting) {\n      this.loadContent();\n      if (this.unobserve) {\n        this.unobserve();\n      }\n    }\n  }\n\n}\n","import {Controller} from \"stimulus\";\r\n\r\nexport class LimitedSelectionCheckboxesController extends Controller {\r\n\r\n  static targets = [\"input\", \"error\"];\r\n  static values = {max: Number, message: String};\r\n\r\n  declare readonly hasErrorTarget: boolean;\r\n  declare readonly errorTarget: HTMLElement;\r\n  declare readonly inputTargets: HTMLInputElement[];\r\n  declare readonly maxValue: number;\r\n  declare readonly messageValue: string;\r\n\r\n  maxSelections = 0;\r\n\r\n  boundHandleInputs = this.handleInputs.bind(this);\r\n\r\n  connect() {\r\n    this.inputTargets.forEach((el) => el.addEventListener(\"change\", this.boundHandleInputs));\r\n  }\r\n\r\n  disconnect() {\r\n    this.inputTargets.forEach((el) => el.removeEventListener(\"change\", this.boundHandleInputs));\r\n  }\r\n\r\n  handleInputs(event: Event) {\r\n    let tickedInputs = this.inputTargets.reduce((previousValue, el) => el.checked ? previousValue + 1 : previousValue, 0);\r\n    let target = event.target as HTMLInputElement;\r\n    if (tickedInputs > this.maxSelections) {\r\n      event.preventDefault();\r\n      target.checked = false;\r\n      target.dispatchEvent(new CustomEvent(\"change\", {bubbles: true, cancelable: true}));\r\n      target.dispatchEvent(new CustomEvent(\"limited-selection:too-many\", {bubbles: true, cancelable: true, detail: {target}}));\r\n      if (this.hasErrorTarget) {\r\n        this.errorTarget.innerHTML = this.messageValue;\r\n      }\r\n    } else {\r\n      target.dispatchEvent(new CustomEvent(\"limited-selection:selection\", {bubbles: true, cancelable: true, detail: {target}}));\r\n      if (this.hasErrorTarget) {\r\n        this.errorTarget.innerHTML = \"\";\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {Controller} from \"stimulus\";\r\n\r\nexport class PasswordConfirmController extends Controller {\r\n\r\n  static targets = [\"password\"];\r\n  static classes = [\"error\"];\r\n\r\n  declare readonly passwordTargets: HTMLInputElement[];\r\n\r\n  declare readonly errorClass: string;\r\n  declare readonly hasErrorClass: boolean;\r\n\r\n  private boundCheckPasswordsMatch = this.checkPasswordsMatch.bind(this);\r\n\r\n  connect() {\r\n    this.passwordTargets.forEach((el) => el.addEventListener(\"change\", this.boundCheckPasswordsMatch));\r\n  }\r\n\r\n  disconnect() {\r\n    this.passwordTargets.forEach((el) => el.removeEventListener(\"change\", this.boundCheckPasswordsMatch));\r\n  }\r\n\r\n  private allPasswordsMatch() {\r\n    let values = new Set(this.passwordTargets.map(el => el.value));  // Create a unique set of the password values\r\n    return values.has(\"\") || values.size == 1; // If any of the passwords are still blank, or there is only one distinct password value (i.e. they all are the same)\r\n  }\r\n\r\n  private checkPasswordsMatch() {\r\n    if (this.allPasswordsMatch()) {\r\n      this.element.dispatchEvent(new CustomEvent(\"password-confirm:match\"));\r\n      if (this.hasErrorClass) {\r\n        this.passwordTargets.forEach(el => el.classList.remove(this.errorClass));\r\n      }\r\n    } else {\r\n      this.element.dispatchEvent(new CustomEvent(\"password-confirm:no-match\"));\r\n      if (this.hasErrorClass) {\r\n        this.passwordTargets.forEach(el => el.classList.add(this.errorClass));\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {Controller} from \"stimulus\";\r\n\r\nexport class PasswordPeekController extends Controller {\r\n\r\n  static targets = [\"password\"];\r\n\r\n  declare readonly passwordTarget: HTMLInputElement;\r\n\r\n  connect() {\r\n  }\r\n\r\n  peak(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    this.passwordTarget.type = \"text\";\r\n  }\r\n\r\n  hide(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    this.passwordTarget.type = \"password\";\r\n  }\r\n\r\n  toggle(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    if (this.passwordTarget.type === \"password\") {\r\n      this.peak();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import {Controller} from \"stimulus\";\nimport {useDebounce, useWindowResize} from \"stimulus-use\";\nimport {WindowResizePayload} from \"stimulus-use/dist/use-window-resize/use-window-resize\";\n\ninterface ResponsiveIframeMessage {\n  name: string,\n  height: number,\n}\n\nexport class ResponsiveIframeWrapperController extends Controller {\n\n  boundMessageReceived = this.messageReceived.bind(this);\n\n  connect() {\n    window.addEventListener(\"message\", this.boundMessageReceived);\n  }\n\n  disconnect() {\n    window.removeEventListener(\"message\", this.boundMessageReceived);\n  }\n\n  messageReceived(message: MessageEvent<ResponsiveIframeMessage>) {\n    let data = message.data;\n    if (data.hasOwnProperty(\"name\") && data.name === \"iframe-body\" && data.hasOwnProperty(\"height\")) {\n      this.resize(data.height);\n    }\n  }\n\n  resize(height: number) {\n    (this.element as HTMLIFrameElement).style.height = `${height}px`;\n  }\n\n}\n\nexport class ResponsiveIframeBodyController extends Controller {\n\n  static debounces = [\"postUpdate\"];\n\n  declare observe: () => void;\n  declare unobserve: () => void;\n\n  connect() {\n    // If this Window is inside a frame\n    if (window.self !== window.top) {\n      useWindowResize(this);\n      useDebounce(this, {});\n      this.postUpdate();\n    } else {\n      // Not an iframe\n    }\n  }\n\n  windowResize(payload: WindowResizePayload) {\n    this.postUpdate();\n  };\n\n  postUpdate() {\n    let payload: ResponsiveIframeMessage = {name: \"iframe-body\", height: this.getHeight()};\n    window.parent.postMessage(\n      payload,\n      \"*\",\n    );\n  }\n\n  getHeight(): number {\n    const body = document.body;\n    const html = document.documentElement;\n\n    // Get the largest height out of body and html's various height measurements\n    return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n  }\n\n}\n","import camelCase from \"lodash.camelcase\";\r\nimport {Controller} from \"stimulus\";\r\n\r\nexport class EphemeralController extends Controller {\r\n\r\n  cleanupSelf() {\r\n    this.cleanup(this.element as HTMLElement);\r\n  }\r\n\r\n  cleanup(element: HTMLElement) {\r\n    element.dataset.controller = element.dataset.controller?.replaceAll(new RegExp(`(\\s|^)${this.identifier}(\\s|$)`, \"g\"), \"\") || \"\";\r\n    if (element.dataset.controller == \"\") {\r\n      // If there are no controllers left, remove the attribute\r\n      delete element.dataset.controller;\r\n    }\r\n\r\n    let substringIdentifierValueRegex = new RegExp(`(\\s|^)${this.identifier}\\\\..+?(\\s|$)`, \"g\");\r\n    element.dataset.target = element.dataset.target?.replaceAll(substringIdentifierValueRegex, \"\") || \"\";\r\n    delete element.dataset[camelCase(`${this.identifier}-target`)];\r\n    if (element.dataset.target == \"\") {\r\n      // If there are no targets left, remove the attribute\r\n      delete element.dataset.target;\r\n    }\r\n\r\n    element.dataset.action = element.dataset.target?.replaceAll(substringIdentifierValueRegex, \"\") || \"\";\r\n    delete element.dataset[camelCase(`${this.identifier}-action`)];\r\n    if (element.dataset.action == \"\") {\r\n      // If there are no actions left, remove the attribute\r\n      delete element.dataset.action;\r\n    }\r\n\r\n    // @ts-ignore\r\n    let values = this.constructor.values;\r\n    if (values) {\r\n      Object.keys(values).forEach(val => delete element.dataset[camelCase(`${this.identifier}-${val}-value`)]);\r\n    }\r\n\r\n    // @ts-ignore\r\n    let classes = this.constructor.classes;\r\n    if (classes) {\r\n      Object.keys(classes).forEach(val => delete element.dataset[camelCase(`${this.identifier}-${val}-class`)]);\r\n    }\r\n  }\r\n\r\n}\r\n","import {EphemeralController} from \"./utilities/ephemeral_controller\";\r\n\r\nexport class ScrollIntoFocusController extends EphemeralController {\r\n\r\n  static values = {\r\n    behavior: String,\r\n    block: String,\r\n    inline: String,\r\n  };\r\n\r\n  declare behaviorValue: ScrollBehavior;\r\n  declare hasBehaviorValue: boolean;\r\n  declare blockValue: ScrollLogicalPosition;\r\n  declare hasBlockValue: boolean;\r\n  declare inlineValue: ScrollLogicalPosition;\r\n  declare hasInlineValue: boolean;\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      try {\r\n        // Attempt smooth scrolling\r\n        this.element.scrollIntoView({\r\n          behavior: this.hasBehaviorValue ? this.behaviorValue : \"smooth\",\r\n          block: this.hasBlockValue ? this.blockValue : \"center\",\r\n          inline: this.hasInlineValue ? this.inlineValue : \"center\",\r\n        });\r\n      } catch {\r\n        // Fallback to snap-scrolling\r\n        this.element.scrollIntoView();\r\n      }\r\n      this.cleanupSelf();\r\n    });\r\n  }\r\n\r\n}\r\n","import {Controller} from \"stimulus\";\r\n\r\nexport class SelfDestructController extends Controller {\r\n\r\n  static values = {seconds: Number};\r\n\r\n  declare readonly secondsValue: number;\r\n  timeout: null | ReturnType<typeof setTimeout> = null;\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      // Only start countdown on first paint\r\n      this.timeout = setTimeout(() => this.element.remove(), this.secondsValue * 1000);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.timeout) {\r\n      clearTimeout(this.timeout);\r\n    }\r\n  }\r\n\r\n}\r\n","import {EphemeralController} from \"./utilities/ephemeral_controller\";\r\n\r\nexport class TeleportController extends EphemeralController {\r\n\r\n  static values = {target: String, insert: String, immediate: Boolean};\r\n\r\n  declare readonly immediateValue: boolean;\r\n  declare readonly hasImmediateValue: boolean;\r\n  declare readonly targetValue: string;\r\n  declare readonly hasInsertValue: boolean;\r\n  declare readonly insertValue: InsertPosition | \"replaceOuter\" | \"replaceInner\" | \"prepend\" | \"append\";\r\n\r\n  connect() {\r\n    if (!this.hasInsertValue) {\r\n      throw new Error(\"`insert` value was not specified\");\r\n    }\r\n\r\n    requestAnimationFrame(() => {\r\n      if (this.hasImmediateValue && this.immediateValue) {\r\n        this.execute();\r\n      }\r\n    });\r\n  }\r\n\r\n  execute(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    let destination = document.querySelector(this.targetValue);\r\n\r\n    if (destination == null) {\r\n      this.element.dispatchEvent(new CustomEvent(\"teleport:error\", {bubbles: true, cancelable: true}));\r\n      return;\r\n    }\r\n\r\n    let copy = this.element.cloneNode(true) as HTMLElement;\r\n    this.cleanup(copy);\r\n\r\n    switch (this.insertValue) {\r\n      case \"beforebegin\":\r\n      case \"beforeend\":\r\n      case \"afterend\":\r\n      case \"afterbegin\":\r\n        destination.insertAdjacentHTML(this.insertValue, copy.outerHTML);\r\n        break;\r\n      case \"replaceOuter\":\r\n        destination.outerHTML = copy.outerHTML;\r\n        break;\r\n      case \"replaceInner\":\r\n        destination.innerHTML = copy.outerHTML;\r\n        break;\r\n      case \"prepend\":\r\n        destination.insertAdjacentHTML(\"afterbegin\", copy.outerHTML);\r\n        break;\r\n      case \"append\":\r\n        destination.insertAdjacentHTML(\"beforeend\", copy.outerHTML);\r\n        break;\r\n      default:\r\n        throw new Error(\"`insert` value was not specified\");\r\n\r\n    }\r\n    this.element.remove();\r\n  }\r\n\r\n}\r\n","import {Controller} from \"stimulus\";\nimport {useClickOutside, useHover} from \"stimulus-use\";\n\nexport type ToggleClassMode = \"on\" | \"off\" | \"toggle\"\n\nexport class ToggleClassController extends Controller {\n\n  static targets = [\"toggle\"];\n  static values = {\n    class: String,\n    mouseEnter: String,\n    mouseLeave: String,\n    clickAway: Boolean,\n    initial: String,\n  };\n\n  declare readonly toggleTargets: HTMLElement[];\n\n  declare readonly classValue: string;\n  declare readonly hasClassValue: boolean;\n\n  declare readonly mouseEnterValue: ToggleClassMode;\n  declare readonly hasMouseEnterValue: boolean;\n\n  declare readonly mouseLeaveValue: ToggleClassMode;\n  declare readonly hasMouseLeaveValue: boolean;\n\n  declare readonly clickAwayValue: boolean;\n  declare readonly hasClickAwayValue: boolean;\n\n  declare readonly initialValue: \"on\" | \"off\";\n\n  connect() {\n    if (this.initialValue === \"on\") {\n      this.toggleTargets.forEach((target) => this.elementOn(target));\n    } else {\n      this.toggleTargets.forEach((target) => this.elementOff(target));\n    }\n\n    if (this.hasMouseEnterValue || this.hasMouseLeaveValue) {\n      useHover(this);\n    }\n\n    if (this.hasClickAwayValue && this.clickAwayValue) {\n      useClickOutside(this);\n    }\n\n    if (!this.hasClassValue) {\n      throw new Error(\"data-toggle-class-class-value must not be empty\");\n    }\n  }\n\n  clickOutside() {\n    this.toggleTargets.forEach((target) => {\n      if (this.elementWasToggled(target)) {\n        this.elementToggleStatus(target);\n        this.elementToggle(target);\n      }\n    });\n  }\n\n  mouseEnter() {\n    if (this.hasMouseEnterValue) {\n      switch (this.mouseEnterValue) {\n        case \"on\":\n          this.on();\n          break;\n        case \"off\":\n          this.off();\n          break;\n        case \"toggle\":\n          this.toggle();\n          break;\n      }\n    }\n    return {};\n  }\n\n  mouseLeave() {\n    if (this.hasMouseLeaveValue) {\n      switch (this.mouseLeaveValue) {\n        case \"on\":\n          this.on();\n          break;\n        case \"off\":\n          this.off();\n          break;\n        case \"toggle\":\n          this.toggle();\n          break;\n      }\n    }\n    return {};\n  }\n\n  on(event?: Event) {\n    this.toggleTargets.forEach((target) => {\n      this.elementToggleStatus(target);\n      this.elementOn(target);\n    });\n  }\n\n  off(event?: Event) {\n    this.toggleTargets.forEach((target) => {\n      this.elementToggleStatus(target);\n      this.elementOff(target);\n    });\n  }\n\n  toggle(event?: Event) {\n    this.toggleTargets.forEach((target) => {\n      this.elementToggleStatus(target);\n      this.elementToggle(target);\n    });\n  }\n\n  private elementWasToggled(el: HTMLElement): boolean {\n    return el.dataset.toggled == \"true\";\n  }\n\n  private elementToggleStatus(el: HTMLElement) {\n    if (this.elementWasToggled(el)) {\n      delete el.dataset.toggled;\n    } else {\n      el.dataset.toggled = \"true\";\n    }\n  }\n\n  private elementToggle(el: HTMLElement) {\n    let classes = this.classValue.split(\" \");\n    classes.forEach((klass) => el.classList.toggle(klass));\n  }\n\n  private elementOn(el: HTMLElement) {\n    let classes = this.classValue.split(\" \");\n    classes.forEach((klass) => el.classList.toggle(klass, true));\n  }\n\n  private elementOff(el: HTMLElement) {\n    let classes = this.classValue.split(\" \");\n    classes.forEach((klass) => el.classList.toggle(klass, false));\n  }\n\n}\n","import {Controller} from \"stimulus\";\r\n\r\nexport class WordCountController extends Controller {\r\n\r\n  static targets = [\"input\", \"output\"];\r\n  static values = {min: Number, max: Number};\r\n  static classes = [\"error\"];\r\n\r\n  declare readonly inputTarget: HTMLInputElement | HTMLTextAreaElement;\r\n  declare readonly outputTarget: HTMLElement;\r\n  declare minValue: number;\r\n  declare hasMinValue: boolean;\r\n  declare maxValue: number;\r\n  declare hasMaxValue: boolean;\r\n  declare errorClass: string;\r\n  declare hasErrorClass: boolean;\r\n\r\n  boundHandler = this.updateWordCount.bind(this);\r\n\r\n  connect() {\r\n    this.updateWordCount();\r\n    this.inputTarget.addEventListener(\"input\", this.boundHandler);\r\n  }\r\n\r\n  disconnect() {\r\n    this.inputTarget.removeEventListener(\"input\", this.boundHandler);\r\n  }\r\n\r\n  updateWordCount() {\r\n    let wordCount = 0;\r\n    let textAreaValue = this.inputTarget.value;\r\n    let matches = textAreaValue.match(/\\S+/g);\r\n    wordCount = (matches && matches.length) || 0;\r\n    this.outputTarget.innerText = wordCount.toString();\r\n    if (this.hasErrorClass) {\r\n      if (this.isValidCount(wordCount)) {\r\n        this.outputTarget.classList.remove(this.errorClass);\r\n      } else {\r\n        this.outputTarget.classList.add(this.errorClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  isValidCount(count: number) {\r\n    let min = 0;\r\n    let max = 99999;\r\n\r\n    if (this.hasMinValue) {\r\n      min = this.minValue;\r\n    }\r\n\r\n    if (this.hasMaxValue) {\r\n      max = this.maxValue;\r\n    }\r\n\r\n    return count >= min && count <= max;\r\n  }\r\n\r\n}\r\n"],"names":["AsyncBlockController","connect","this","loadContent","el","hasReplaceTarget","replaceTarget","element","fetch","endpointValue","then","response","text","html","newEl","document","createElement","innerHTML","replaceWith","event","CustomEvent","detail","dispatchEvent","err","Controller","endpoint","String","AutoSubmitFormController","_this","handler","bind","querySelectorAll","forEach","addEventListener","_this2","boundHandler","disconnect","removeEventListener","_this3","e","bubbles","cancelable","method","controller","methodName","args","composeEventName","name","eventPrefix","composedName","identifier","extendedEvent","type","composed","Object","assign","originalEvent","defaultOptions","events","onlyVisible","debug","logger","console","StimulusUse","[object Object]","options","_a","_b","_c","log","functionName","groupCollapsed","controllerId","groupEnd","application","stimulusUseDebug","id","dataset","controllerInitialize","initialize","controllerConnect","controllerDisconnect","UseHover","super","observe","targetElement","onEnter","onLeave","unobserve","call","hover","enhanceController","UseMutation","observer","error","handleError","mutation","entries","MutationObserver","useWindowResize","callback","innerWidth","innerHeight","window","payload","height","Infinity","width","debounce","fn","wait","timeoutId","arguments","context","apply","clearTimeout","setTimeout","AutosizeController","target","style","resize","boxSizing","requestAnimationFrame","windowResize","autosize","offset","offsetHeight","clientHeight","scrollHeight","CharCountController","updateCharCount","inputTarget","charCount","value","length","outputTarget","innerText","toString","hasErrorClass","isValidCount","classList","remove","errorClass","add","count","min","max","hasMinValue","minValue","hasMaxValue","maxValue","Number","ClipboardController","supported","queryCommandSupported","hasRemoveUnusedValue","removeUnusedValue","hasFallbackTarget","fallbackTarget","hasCopyTarget","copyTarget","select","preventDefault","sourceTarget","copy","execCommand","removeUnused","Boolean","ConfirmNavigationController","confirmMessage","messageValue","onbeforeunload","handlePopstate","message","DebugController","testTargets","DetectDirtyController","initialValue","isInputElement","isCheckable","checked","restore","setAttribute","removeAttribute","tagName","DisableInputsController","toggle","hasDisablerTarget","disablerTarget","disableInputs","enableInputs","disableTargets","_","disabled","DismissableController","dismiss","EmptyDomController","useMutation","childList","mutate","hasScopeSelectorValue","scopeSelectorValue","children","hasNotEmptyClass","notEmptyClass","split","klass","hasEmptyClass","emptyClass","scopeSelector","EnableInputsController","hasEnablerTarget","enablerTarget","enableTargets","FallbackImageController","onerror","hasPlaceholderValue","src","placeholderValue","display","placeholder","LazyBlockController","threshold","IntersectionObserver","entry","isIntersecting","isVisible","eventName","appearEvent","dispatchAppear","disappearEvent","dispatchDisappear","useIntersection","appear","LimitedSelectionCheckboxesController","handleInputs","inputTargets","boundHandleInputs","tickedInputs","reduce","previousValue","maxSelections","hasErrorTarget","errorTarget","PasswordConfirmController","checkPasswordsMatch","passwordTargets","boundCheckPasswordsMatch","allPasswordsMatch","values","Set","map","has","size","_this4","PasswordPeekController","peak","passwordTarget","hide","ResponsiveIframeWrapperController","messageReceived","boundMessageReceived","data","hasOwnProperty","ResponsiveIframeBodyController","self","top","constructor","debounces","func","postUpdate","getHeight","parent","postMessage","body","documentElement","Math","EphemeralController","cleanupSelf","cleanup","replaceAll","RegExp","substringIdentifierValueRegex","camelCase","action","keys","val","classes","ScrollIntoFocusController","scrollIntoView","behavior","hasBehaviorValue","behaviorValue","block","hasBlockValue","blockValue","inline","hasInlineValue","inlineValue","SelfDestructController","timeout","secondsValue","seconds","TeleportController","hasInsertValue","Error","hasImmediateValue","immediateValue","execute","destination","querySelector","targetValue","cloneNode","insertValue","insertAdjacentHTML","outerHTML","insert","immediate","ToggleClassController","toggleTargets","elementOn","elementOff","hasMouseEnterValue","hasMouseLeaveValue","useHover","hasClickAwayValue","clickAwayValue","onEvent","contains","rect","getBoundingClientRect","windowHeight","windowWidth","clientWidth","left","isElementInViewport","clickOutside","clickOutsideEvent","useClickOutside","hasClassValue","elementWasToggled","elementToggleStatus","elementToggle","mouseEnter","mouseEnterValue","on","off","mouseLeave","mouseLeaveValue","_this5","toggled","classValue","class","clickAway","initial","WordCountController","updateWordCount","wordCount","matches","match"],"mappings":"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"}