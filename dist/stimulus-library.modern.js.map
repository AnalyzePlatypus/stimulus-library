{"version":3,"file":"stimulus-library.modern.js","sources":["../src/base_controller.ts","../src/async_block_controller.ts","../src/auto_submit_form_controller.ts","../node_modules/stimulus-use/dist/support/index.js","../node_modules/stimulus-use/dist/use-intersection/use-intersection.js","../node_modules/stimulus-use/dist/use-click-outside/use-click-outside.js","../node_modules/stimulus-use/dist/stimulus_use.js","../node_modules/stimulus-use/dist/use-hover/use-hover.js","../node_modules/stimulus-use/dist/use-mutation/use-mutation.js","../node_modules/stimulus-use/dist/use-window-resize/use-window-resize.js","../node_modules/stimulus-use/dist/use-debounce/use-debounce.js","../src/autosize_controller.ts","../src/char_count_controller.ts","../src/clipboard_controller.ts","../src/confirm_navigation_controller.ts","../src/debug_controller.ts","../src/detect_dirty_controller.ts","../src/disable_inputs_controller.ts","../src/dismissable_controller.ts","../src/empty_dom_controller.ts","../src/enable_inputs_controller.ts","../src/fallback_image_controller.ts","../src/lazy_block_controller.ts","../src/limited_selection_checkboxes_controller.ts","../src/password_confirm_controller.ts","../src/password_peek_controller.ts","../src/responsive_iframe_controller.ts","../src/utilities/ephemeral_controller.ts","../src/utilities/scroll.ts","../src/scroll_into_focus_controller.ts","../src/scroll_to_bottom_controller.ts","../src/scroll_to_controller.ts","../src/scroll_to_top_controller.ts","../src/self_destruct_controller.ts","../src/teleport_controller.ts","../src/toggle_class_controller.ts","../src/word_count_controller.ts"],"sourcesContent":["import {Context, Controller} from \"stimulus\";\r\n\r\nexport class BaseController extends Controller {\r\n\r\n\r\n  log(functionName: string, args: {} = {}): void {\r\n    // @ts-ignore\r\n    if (!this.application.debug) {\r\n      return;\r\n    }\r\n    let logger = console;\r\n    logger.groupCollapsed(`%c${this.identifier} %c#${functionName}`, \"color: #3B82F6\", \"color: unset\");\r\n    logger.log({\r\n      element: this.element,\r\n      ...args,\r\n    });\r\n    logger.groupEnd();\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"./base_controller\";\n\nexport class AsyncBlockController extends BaseController {\n  static targets = [\"replace\"];\n  static values = {endpoint: String};\n\n  declare readonly replaceTarget: HTMLElement;\n  declare readonly hasReplaceTarget: boolean;\n  declare readonly endpointValue: string;\n\n\n  // This is a simple controller to load a block of content when the page loads.\n  // It should be used to give a quick initial response before calling out to an\n  // an AJAX endpoint to do some expensive work.\n  connect() {\n    this.loadContent();\n  }\n\n  loadContent() {\n    let el = (this.hasReplaceTarget ? this.replaceTarget : this.element) as HTMLElement;\n    fetch(this.endpointValue)\n    .then((response) => response.text())\n    .then((html) => {\n      let newEl = document.createElement(\"div\");\n      newEl.innerHTML = html;\n      el.replaceWith(newEl);\n\n      // Trigger event to show block has loaded\n      let event = new CustomEvent(\"ajax:success\", {\"detail\": \"\"});\n      el.dispatchEvent(event);\n    })\n    .catch(err => {\n      el.replaceWith(\"Sorry, this content failed to load\");\n\n      let event = new CustomEvent(\"ajax:error\", {\"detail\": \"\"});\n      el.dispatchEvent(event);\n    })\n    .finally(() => {\n      let event = new CustomEvent(\"ajax:complete\", {\"detail\": \"\"});\n      el.dispatchEvent(event);\n    });\n  }\n}\n","import {BaseController} from \"./base_controller\";\n\nexport class AutoSubmitFormController extends BaseController {\n\n  private boundHandler = this.handler.bind(this);\n\n  connect() {\n    (this.element as HTMLElement).querySelectorAll(\"input, select, textarea\").forEach(el => el.addEventListener(\"change\", this.boundHandler));\n  }\n\n  disconnect() {\n    (this.element as HTMLElement).querySelectorAll(\"input, select, textarea\").forEach(el => el.removeEventListener(\"change\", this.boundHandler));\n  }\n\n  private handler(e: Event) {\n    // this.element.submit()\n    // Moved to this to support remote forms and CSRF properly\n    this.element.dispatchEvent(\n      new CustomEvent(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n      }),\n    );\n  }\n}\n","export const method = (controller, methodName) => {\n    const method = controller[methodName];\n    if (typeof method == 'function') {\n        return method;\n    }\n    else {\n        return (...args) => { };\n    }\n};\nexport const composeEventName = (name, controller, eventPrefix) => {\n    let composedName = name;\n    if (eventPrefix === true) {\n        composedName = `${controller.identifier}:${name}`;\n    }\n    else if (typeof eventPrefix === 'string') {\n        composedName = `${eventPrefix}:${name}`;\n    }\n    return composedName;\n};\nexport const extendedEvent = (type, event, detail) => {\n    const { bubbles, cancelable, composed } = event || { bubbles: true, cancelable: true, composed: true };\n    if (event) {\n        Object.assign(detail, { originalEvent: event });\n    }\n    const customEvent = new CustomEvent(type, {\n        bubbles,\n        cancelable,\n        composed,\n        detail,\n    });\n    return customEvent;\n};\nexport function isElementInViewport(el) {\n    const rect = el.getBoundingClientRect();\n    const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n    const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n    const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n    const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) >= 0);\n    return (vertInView && horInView);\n}\n//# sourceMappingURL=index.js.map","import { method, extendedEvent, composeEventName } from '../support/index';\nconst defaultOptions = {\n    dispatchEvent: true,\n    eventPrefix: true,\n};\nexport const useIntersection = (controller, options = {}) => {\n    const { dispatchEvent, eventPrefix } = Object.assign({}, defaultOptions, options);\n    const targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n    const callback = (entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n            dispatchAppear(entry);\n        }\n        else if (controller.isVisible) {\n            dispatchDisappear(entry);\n        }\n    };\n    const dispatchAppear = (entry) => {\n        controller.isVisible = true;\n        method(controller, 'appear').call(controller, entry);\n        // emit a custom \"appear\" event\n        if (dispatchEvent) {\n            const eventName = composeEventName('appear', controller, eventPrefix);\n            const appearEvent = extendedEvent(eventName, null, { controller, entry });\n            targetElement.dispatchEvent(appearEvent);\n        }\n    };\n    const dispatchDisappear = (entry) => {\n        controller.isVisible = false;\n        method(controller, 'disappear').call(controller, entry);\n        // emit a custom \"disappear\" event\n        if (dispatchEvent) {\n            const eventName = composeEventName('disappear', controller, eventPrefix);\n            const disappearEvent = extendedEvent(eventName, null, { controller, entry });\n            targetElement.dispatchEvent(disappearEvent);\n        }\n    };\n    // keep a copy of the current disconnect() function of the controller\n    // to support composing several behaviors\n    const controllerDisconnect = controller.disconnect.bind(controller);\n    const observer = new IntersectionObserver(callback, options);\n    const observe = () => {\n        observer.observe(targetElement);\n    };\n    const unobserve = () => {\n        observer.unobserve(targetElement);\n    };\n    Object.assign(controller, {\n        isVisible: false,\n        disconnect() {\n            unobserve();\n            controllerDisconnect();\n        },\n    });\n    observe();\n    return [observe, unobserve];\n};\n//# sourceMappingURL=use-intersection.js.map","import { composeEventName, extendedEvent, isElementInViewport } from '../support/index';\nconst defaultOptions = {\n    events: ['click', 'touchend'],\n    onlyVisible: true,\n    dispatchEvent: true,\n    eventPrefix: true,\n};\nexport const useClickOutside = (controller, options = {}) => {\n    const { onlyVisible, dispatchEvent, events, eventPrefix } = Object.assign({}, defaultOptions, options);\n    const onEvent = (event) => {\n        const targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n        if (targetElement.contains(event.target) || (!isElementInViewport(targetElement) && onlyVisible)) {\n            return;\n        }\n        // call the clickOutside method of the Stimulus controller\n        if (controller.clickOutside) {\n            controller.clickOutside(event);\n        }\n        // emit a custom event\n        if (dispatchEvent) {\n            const eventName = composeEventName('click:outside', controller, eventPrefix);\n            const clickOutsideEvent = extendedEvent(eventName, event, { controller });\n            targetElement.dispatchEvent(clickOutsideEvent);\n        }\n    };\n    const observe = () => {\n        events === null || events === void 0 ? void 0 : events.forEach(event => {\n            window.addEventListener(event, onEvent, false);\n        });\n    };\n    const unobserve = () => {\n        events === null || events === void 0 ? void 0 : events.forEach(event => {\n            window.removeEventListener(event, onEvent, false);\n        });\n    };\n    // keep a copy of the current disconnect() function of the controller\n    // to support composing several behaviors\n    const controllerDisconnect = controller.disconnect.bind(controller);\n    Object.assign(controller, {\n        disconnect() {\n            unobserve();\n            controllerDisconnect();\n        },\n    });\n    observe();\n    return [observe, unobserve];\n};\n//# sourceMappingURL=use-click-outside.js.map","const defaultOptions = {\n    debug: false,\n    logger: console\n};\nexport class StimulusUse {\n    constructor(controller, options = {}) {\n        var _a, _b, _c;\n        this.log = (functionName, args) => {\n            if (!this.debug)\n                return;\n            this.logger.groupCollapsed(`%c${this.controller.identifier} %c#${functionName}`, 'color: #3B82F6', 'color: unset');\n            this.logger.log(Object.assign({ controllerId: this.controllerId }, args));\n            this.logger.groupEnd();\n        };\n        this.debug = (_b = (_a = options === null || options === void 0 ? void 0 : options.debug) !== null && _a !== void 0 ? _a : controller.application.stimulusUseDebug) !== null && _b !== void 0 ? _b : defaultOptions.debug;\n        this.logger = (_c = options === null || options === void 0 ? void 0 : options.logger) !== null && _c !== void 0 ? _c : defaultOptions.logger;\n        this.controller = controller;\n        this.controllerId = controller.element.id || controller.element.dataset.id;\n        // make copies of lifecycle functions\n        this.controllerInitialize = controller.initialize.bind(controller);\n        this.controllerConnect = controller.connect.bind(controller);\n        this.controllerDisconnect = controller.disconnect.bind(controller);\n    }\n}\n//# sourceMappingURL=stimulus_use.js.map","import { StimulusUse } from '../stimulus_use';\nimport { method } from '../support/index';\nexport class UseHover extends StimulusUse {\n    constructor(controller, options = {}) {\n        super(controller, options);\n        this.observe = () => {\n            this.targetElement.addEventListener('mouseenter', this.onEnter);\n            this.targetElement.addEventListener('mouseleave', this.onLeave);\n        };\n        this.unobserve = () => {\n            this.targetElement.removeEventListener('mouseenter', this.onEnter);\n            this.targetElement.removeEventListener('mouseleave', this.onLeave);\n        };\n        this.onEnter = () => {\n            method(this.controller, 'mouseEnter').call(this.controller);\n            this.log('mouseEnter', { hover: true });\n        };\n        this.onLeave = () => {\n            method(this.controller, 'mouseLeave').call(this.controller);\n            this.log('mouseLeave', { hover: false });\n        };\n        this.targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n        this.controller = controller;\n        this.enhanceController();\n        this.observe();\n    }\n    enhanceController() {\n        const controllerDisconnect = this.controller.disconnect.bind(this.controller);\n        const disconnect = () => {\n            this.unobserve();\n            controllerDisconnect();\n        };\n        Object.assign(this.controller, { disconnect });\n    }\n}\nexport const useHover = (controller, options = {}) => {\n    const observer = new UseHover(controller, options);\n    return [observer.observe, observer.unobserve];\n};\n//# sourceMappingURL=use-hover.js.map","import { StimulusUse } from '../stimulus_use';\nimport { method } from '../support/index';\nexport class UseMutation extends StimulusUse {\n    constructor(controller, options = {}) {\n        super(controller, options);\n        this.observe = () => {\n            try {\n                this.observer.observe(this.targetElement, this.options);\n            }\n            catch (error) {\n                this.controller.application.handleError(error, \"At a minimum, one of childList, attributes, and/or characterData must be true\", {});\n            }\n        };\n        this.unobserve = () => {\n            this.observer.disconnect();\n        };\n        this.mutation = (entries) => {\n            method(this.controller, 'mutate').call(this.controller, entries);\n            this.log('mutate', { entries });\n        };\n        this.targetElement = (options === null || options === void 0 ? void 0 : options.element) || controller.element;\n        this.controller = controller;\n        this.options = options;\n        this.observer = new MutationObserver(this.mutation);\n        this.enhanceController();\n        this.observe();\n    }\n    enhanceController() {\n        const controllerDisconnect = this.controller.disconnect.bind(this.controller);\n        const disconnect = () => {\n            this.unobserve();\n            controllerDisconnect();\n        };\n        Object.assign(this.controller, { disconnect });\n    }\n}\nexport const useMutation = (controller, options = {}) => {\n    const observer = new UseMutation(controller, options);\n    return [observer.observe, observer.unobserve];\n};\n//# sourceMappingURL=use-mutation.js.map","import { method } from '../support/index';\nexport const useWindowResize = (controller) => {\n    const callback = (event) => {\n        const { innerWidth, innerHeight } = window;\n        const payload = {\n            height: innerHeight || Infinity,\n            width: innerWidth || Infinity,\n            event\n        };\n        method(controller, 'windowResize').call(controller, payload);\n    };\n    const controllerDisconnect = controller.disconnect.bind(controller);\n    const observe = () => {\n        window.addEventListener('resize', callback);\n        callback();\n    };\n    const unobserve = () => {\n        window.removeEventListener('resize', callback);\n    };\n    Object.assign(controller, {\n        disconnect() {\n            unobserve();\n            controllerDisconnect();\n        },\n    });\n    observe();\n    return [observe, unobserve];\n};\n//# sourceMappingURL=use-window-resize.js.map","import { Controller } from 'stimulus';\nclass DebounceController extends Controller {\n}\nDebounceController.debounces = [];\nconst defaultWait = 200;\nconst debounce = (fn, wait = defaultWait) => {\n    let timeoutId = null;\n    return function () {\n        const args = arguments;\n        const context = this;\n        const callback = () => fn.apply(context, args);\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(callback, wait);\n    };\n};\nexport const useDebounce = (controller, options) => {\n    var _a;\n    const constructor = controller.constructor;\n    (_a = constructor.debounces) === null || _a === void 0 ? void 0 : _a.forEach((func) => {\n        if (typeof func === \"string\") {\n            controller[func] = debounce(controller[func], options === null || options === void 0 ? void 0 : options.wait);\n        }\n        if (typeof func === \"object\") {\n            const { name, wait } = func;\n            if (!name)\n                return;\n            controller[name] = debounce(controller[name], wait || (options === null || options === void 0 ? void 0 : options.wait));\n        }\n    });\n};\n//# sourceMappingURL=use-debounce.js.map","import {useWindowResize} from \"stimulus-use\";\nimport {BaseController} from \"./base_controller\";\n\nexport class AutosizeController extends BaseController {\n\n  private boundHandler = this.handler.bind(this);\n\n  connect() {\n    let target = this.element as HTMLTextAreaElement;\n    target.style.resize = \"none\";\n    target.style.boxSizing = \"border-box\";\n    target.addEventListener(\"input\", this.boundHandler);\n    target.addEventListener(\"focus\", this.boundHandler);\n    useWindowResize(this);\n    requestAnimationFrame(this.boundHandler);\n  }\n\n  windowResize() {\n    this.handler();\n  }\n\n  private handler() {\n    this.autosize(this.element as HTMLTextAreaElement);\n  };\n\n  private autosize(element: HTMLTextAreaElement) {\n    let offset = element.offsetHeight - element.clientHeight;\n    element.style.height = \"auto\";\n    element.style.height = element.scrollHeight + offset + \"px\";\n  }\n\n}\n","import {BaseController} from \"./base_controller\";\r\n\r\nexport class CharCountController extends BaseController {\r\n\r\n  static targets = [\"input\", \"output\"];\r\n  static values = {min: Number, max: Number};\r\n  static classes = [\"error\"];\r\n\r\n  declare readonly inputTarget: HTMLInputElement | HTMLTextAreaElement;\r\n  declare readonly outputTarget: HTMLElement;\r\n  declare minValue: number;\r\n  declare hasMinValue: boolean;\r\n  declare maxValue: number;\r\n  declare hasMaxValue: boolean;\r\n  declare errorClass: string;\r\n  declare hasErrorClass: boolean;\r\n\r\n  boundHandler = this.updateCharCount.bind(this);\r\n\r\n  connect() {\r\n    this.updateCharCount();\r\n    this.inputTarget.addEventListener(\"input\", this.boundHandler);\r\n  }\r\n\r\n  disconnect() {\r\n    this.inputTarget.removeEventListener(\"input\", this.boundHandler);\r\n  }\r\n\r\n  updateCharCount() {\r\n    let charCount = this.inputTarget.value.length;\r\n    this.outputTarget.innerText = charCount.toString();\r\n    if (this.hasErrorClass) {\r\n      if (this.isValidCount(charCount)) {\r\n        this.outputTarget.classList.remove(this.errorClass);\r\n      } else {\r\n        this.outputTarget.classList.add(this.errorClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  isValidCount(count: number) {\r\n    let min = 0;\r\n    let max = 99999;\r\n\r\n    if (this.hasMinValue) {\r\n      min = this.minValue;\r\n    }\r\n\r\n    if (this.hasMaxValue) {\r\n      max = this.maxValue;\r\n    }\r\n\r\n    return count >= min && count <= max;\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"./base_controller\";\r\n\r\nexport class ClipboardController extends BaseController {\r\n\r\n  static targets = [\"button\", \"copy\", \"fallback\"];\r\n  static values = {removeUnused: Boolean};\r\n\r\n  declare readonly sourceTarget: HTMLElement;\r\n  declare readonly copyTarget: HTMLElement;\r\n  declare readonly hasCopyTarget: boolean;\r\n  declare readonly fallbackTarget: HTMLElement;\r\n  declare readonly hasFallbackTarget: boolean;\r\n\r\n  declare readonly hasRemoveUnusedValue: boolean;\r\n  declare readonly removeUnusedValue: boolean;\r\n\r\n  supported = false;\r\n\r\n  connect() {\r\n    this.supported = document.queryCommandSupported(\"copy\");\r\n\r\n    if (this.hasRemoveUnusedValue && this.removeUnusedValue) {\r\n      if (this.supported && this.hasFallbackTarget) {\r\n        this.fallbackTarget.remove();\r\n      } else if (this.hasCopyTarget) {\r\n        this.copyTarget.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  select(event: MouseEvent) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    (this.sourceTarget as HTMLInputElement | HTMLTextAreaElement).select();\r\n  }\r\n\r\n  copy(event: ClipboardEvent) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    (this.sourceTarget as HTMLInputElement | HTMLTextAreaElement).select();\r\n    if (this.supported) {\r\n      document.execCommand(\"copy\");\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"./base_controller\";\n\nexport class ConfirmNavigationController extends BaseController {\n\n  static values = {message: String};\n\n  declare readonly messageValue: string;\n\n  connect() {\n    let confirmMessage = this.messageValue;\n    window.onbeforeunload = () => (confirmMessage == null ? true : confirmMessage);\n    window.addEventListener(\"popstate\", this.handlePopstate);\n    window.addEventListener(\"submit\", () => {\n      window.removeEventListener(\"popstate\", this.handlePopstate);\n      window.onbeforeunload = null;\n    });\n    // TODO: Turbo navigation events\n  }\n\n  handlePopstate(event: PopStateEvent) {\n    return false;\n  }\n\n}\n","import {BaseController} from \"./base_controller\";\n\nexport class DebugController extends BaseController {\n\n  static targets = [\"test\"];\n  declare testTargets: HTMLElement[];\n\n  connect() {\n    console.log(\"Debug Controller\", this, this.testTargets);\n  }\n}\n","import {BaseController} from \"./base_controller\";\r\n\r\nexport class DetectDirtyController extends BaseController {\r\n\r\n  initialValue: string | boolean | null = null;\r\n\r\n  boundHandler = this.handler.bind(this);\r\n\r\n  connect() {\r\n    let element = this.element as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    if (this.isInputElement(element) && this.isCheckable(element)) {\r\n      this.initialValue = element.checked;\r\n    } else {\r\n      this.initialValue = element.value;\r\n    }\r\n    element.addEventListener(\"input\", this.boundHandler);\r\n    element.addEventListener(\"change\", this.boundHandler);\r\n  }\r\n\r\n  disconnect() {\r\n    let element = this.element as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    element.removeEventListener(\"input\", this.boundHandler);\r\n    element.removeEventListener(\"change\", this.boundHandler);\r\n  }\r\n\r\n  restore() {\r\n    let element = this.element as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n    if (this.isInputElement(element) && this.isCheckable(element)) {\r\n      element.checked = this.initialValue as boolean;\r\n    } else {\r\n      element.value = this.initialValue as string;\r\n    }\r\n  }\r\n\r\n  private handler(event?: Event) {\r\n    let element = this.element as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\r\n\r\n    if (this.initialValue !== element.value) {\r\n      element.setAttribute(\"data-dirty\", \"true\");\r\n    } else {\r\n      element.removeAttribute(\"data-dirty\");\r\n    }\r\n  }\r\n\r\n  private isCheckable(element: HTMLInputElement): boolean {\r\n    return (element.type === \"radio\" || element.type === \"checkbox\");\r\n  }\r\n\r\n  private isInputElement(element: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): element is HTMLInputElement {\r\n    return element.tagName === \"INPUT\";\r\n  }\r\n\r\n}\r\n\r\nexport function isDirty(element: HTMLElement) {\r\n  return element.hasAttribute(\"data-dirty\");\r\n}\r\n","import {BaseController} from \"./base_controller\";\r\n\r\nexport class DisableInputsController extends BaseController {\r\n\r\n  static targets = [\"disabler\", \"disable\"];\r\n\r\n  declare readonly hasDisablerTarget: boolean;\r\n  declare readonly disablerTarget: HTMLInputElement;\r\n  declare readonly disableTargets: Array<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>;\r\n\r\n  connect() {\r\n    this.toggle();\r\n  }\r\n\r\n  toggle() {\r\n    if (this.hasDisablerTarget && this.disablerTarget.checked) {\r\n      this.disableInputs();\r\n    } else {\r\n      this.enableInputs();\r\n    }\r\n  }\r\n\r\n  disableInputs() {\r\n    this.disableTargets.forEach((el, _) => {\r\n      el.disabled = true;\r\n    });\r\n  }\r\n\r\n  enableInputs() {\r\n    this.disableTargets.forEach((el, _) => {\r\n      el.disabled = false;\r\n    });\r\n  }\r\n}\r\n","import {BaseController} from \"./base_controller\";\r\n\r\nexport class DismissableController extends BaseController {\r\n\r\n\r\n  dismiss() {\r\n    this.element.remove();\r\n  }\r\n\r\n}\r\n","import {useMutation} from \"stimulus-use\";\r\nimport {BaseController} from \"./base_controller\";\r\n\r\nexport class EmptyDomController extends BaseController {\r\n\r\n  static classes = [\"empty\", \"notEmpty\"];\r\n  static values = {scopeSelector: String};\r\n\r\n  declare hasEmptyClass: boolean;\r\n  declare emptyClass: string;\r\n  declare hasNotEmptyClass: boolean;\r\n  declare notEmptyClass: string;\r\n\r\n  declare hasScopeSelectorValue: boolean;\r\n  declare scopeSelectorValue: string;\r\n\r\n  connect() {\r\n    useMutation(this, {element: this.element, childList: true});\r\n    this.checkEmpty();\r\n  }\r\n\r\n  mutate(entries: MutationRecord[]) {\r\n    this.checkEmpty();\r\n  }\r\n\r\n  checkEmpty() {\r\n    let children;\r\n    if (this.hasScopeSelectorValue) {\r\n      children = this.element.querySelectorAll(this.scopeSelectorValue);\r\n    } else {\r\n      children = this.element.children;\r\n    }\r\n\r\n    if (children.length === 0) {\r\n      if (this.hasNotEmptyClass) {\r\n        let classes = this.notEmptyClass.split(\" \");\r\n        classes.forEach(klass => this.element.classList.remove(klass));\r\n      }\r\n      if (this.hasEmptyClass) {\r\n        let classes = this.emptyClass.split(\" \");\r\n        classes.forEach(klass => this.element.classList.add(klass));\r\n      }\r\n      this.element.dispatchEvent(new CustomEvent(\"dom:empty\", {bubbles: true, cancelable: true}));\r\n    } else {\r\n      if (this.hasNotEmptyClass) {\r\n        let classes = this.notEmptyClass.split(\" \");\r\n        classes.forEach(klass => this.element.classList.add(klass));\r\n      }\r\n      if (this.hasEmptyClass) {\r\n        let classes = this.emptyClass.split(\" \");\r\n        classes.forEach(klass => this.element.classList.remove(klass));\r\n      }\r\n      this.element.dispatchEvent(new CustomEvent(\"dom:not-empty\", {bubbles: true, cancelable: true}));\r\n    }\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"./base_controller\";\r\n\r\nexport class EnableInputsController extends BaseController {\r\n\r\n  static targets = [\"enabler\", \"enable\"];\r\n\r\n  declare readonly hasEnablerTarget: boolean;\r\n  declare readonly enablerTarget: HTMLInputElement;\r\n  declare readonly enableTargets: Array<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>;\r\n\r\n  connect() {\r\n    this.toggle();\r\n  }\r\n\r\n  toggle() {\r\n    if (this.hasEnablerTarget && this.enablerTarget.checked) {\r\n      this.enableInputs();\r\n    } else {\r\n      this.disableInputs();\r\n    }\r\n  }\r\n\r\n  disableInputs() {\r\n    this.enableTargets.forEach((el, _) => {\r\n      el.disabled = true;\r\n    });\r\n  }\r\n\r\n  enableInputs() {\r\n    this.enableTargets.forEach((el, _) => {\r\n      el.disabled = false;\r\n    });\r\n  }\r\n}\r\n","import {BaseController} from \"./base_controller\";\r\n\r\nexport class FallbackImageController extends BaseController {\r\n\r\n  static values = {placeholder: String};\r\n\r\n  declare readonly placeholderValue: string;\r\n  declare readonly hasPlaceholderValue: boolean;\r\n\r\n  connect() {\r\n    let element = this.element as HTMLImageElement;\r\n\r\n    element.onerror = () => {\r\n      if (this.hasPlaceholderValue) {\r\n        element.src = this.placeholderValue;\r\n      } else {\r\n        element.style.display = \"none\";\r\n      }\r\n    };\r\n  }\r\n\r\n}\r\n","import {useIntersection} from \"stimulus-use\";\nimport {IntersectionOptions} from \"stimulus-use/dist/use-intersection/use-intersection\";\nimport {AsyncBlockController} from \"./async_block_controller\";\n\nexport class LazyBlockController extends AsyncBlockController {\n\n  declare observe: () => void;\n  declare unobserve: () => void;\n  declare options: IntersectionOptions;\n  declare isVisible: boolean;\n  declare disappear: () => void;\n\n  connect() {\n    let element = this.element;\n    this.options = {element, threshold: 0.3};\n\n    if (\"IntersectionObserver\" in window) {\n      [this.observe, this.unobserve] = useIntersection(this, this.options);\n    } else {\n      // Client doesn't support intersection observer, fallback to pre-loading\n      this.loadContent();\n    }\n  }\n\n  appear(entry: IntersectionObserverEntry) {\n    let element = this.element as HTMLImageElement;\n    if (element.src !== \"\") {\n      return;\n    }\n    if (entry.target === element && entry.isIntersecting) {\n      this.loadContent();\n      if (this.unobserve) {\n        this.unobserve();\n      }\n    }\n  }\n\n}\n","import {BaseController} from \"./base_controller\";\r\n\r\nexport class LimitedSelectionCheckboxesController extends BaseController {\r\n\r\n  static targets = [\"input\", \"error\"];\r\n  static values = {max: Number, message: String};\r\n\r\n  declare readonly hasErrorTarget: boolean;\r\n  declare readonly errorTarget: HTMLElement;\r\n  declare readonly inputTargets: HTMLInputElement[];\r\n  declare readonly maxValue: number;\r\n  declare readonly messageValue: string;\r\n\r\n  maxSelections = 0;\r\n\r\n  boundHandleInputs = this.handleInputs.bind(this);\r\n\r\n  connect() {\r\n    this.inputTargets.forEach((el) => el.addEventListener(\"change\", this.boundHandleInputs));\r\n  }\r\n\r\n  disconnect() {\r\n    this.inputTargets.forEach((el) => el.removeEventListener(\"change\", this.boundHandleInputs));\r\n  }\r\n\r\n  handleInputs(event: Event) {\r\n    let tickedInputs = this.inputTargets.reduce((previousValue, el) => el.checked ? previousValue + 1 : previousValue, 0);\r\n    let target = event.target as HTMLInputElement;\r\n    if (tickedInputs > this.maxSelections) {\r\n      event.preventDefault();\r\n      target.checked = false;\r\n      target.dispatchEvent(new CustomEvent(\"change\", {bubbles: true, cancelable: true}));\r\n      target.dispatchEvent(new CustomEvent(\"limited-selection:too-many\", {bubbles: true, cancelable: true, detail: {target}}));\r\n      if (this.hasErrorTarget) {\r\n        this.errorTarget.innerHTML = this.messageValue;\r\n      }\r\n    } else {\r\n      target.dispatchEvent(new CustomEvent(\"limited-selection:selection\", {bubbles: true, cancelable: true, detail: {target}}));\r\n      if (this.hasErrorTarget) {\r\n        this.errorTarget.innerHTML = \"\";\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"./base_controller\";\r\n\r\nexport class PasswordConfirmController extends BaseController {\r\n\r\n  static targets = [\"password\"];\r\n  static classes = [\"error\"];\r\n\r\n  declare readonly passwordTargets: HTMLInputElement[];\r\n\r\n  declare readonly errorClass: string;\r\n  declare readonly hasErrorClass: boolean;\r\n\r\n  private boundCheckPasswordsMatch = this.checkPasswordsMatch.bind(this);\r\n\r\n  connect() {\r\n    this.passwordTargets.forEach((el) => el.addEventListener(\"change\", this.boundCheckPasswordsMatch));\r\n  }\r\n\r\n  disconnect() {\r\n    this.passwordTargets.forEach((el) => el.removeEventListener(\"change\", this.boundCheckPasswordsMatch));\r\n  }\r\n\r\n  private allPasswordsMatch() {\r\n    let values = new Set(this.passwordTargets.map(el => el.value));  // Create a unique set of the password values\r\n    return values.has(\"\") || values.size == 1; // If any of the passwords are still blank, or there is only one distinct password value (i.e. they all are the same)\r\n  }\r\n\r\n  private checkPasswordsMatch() {\r\n    if (this.allPasswordsMatch()) {\r\n      this.element.dispatchEvent(new CustomEvent(\"password-confirm:match\"));\r\n      if (this.hasErrorClass) {\r\n        this.passwordTargets.forEach(el => el.classList.remove(this.errorClass));\r\n      }\r\n    } else {\r\n      this.element.dispatchEvent(new CustomEvent(\"password-confirm:no-match\"));\r\n      if (this.hasErrorClass) {\r\n        this.passwordTargets.forEach(el => el.classList.add(this.errorClass));\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {BaseController} from \"./base_controller\";\r\n\r\nexport class PasswordPeekController extends BaseController {\r\n\r\n  static targets = [\"password\"];\r\n\r\n  declare readonly passwordTarget: HTMLInputElement;\r\n\r\n\r\n  peak(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    this.passwordTarget.type = \"text\";\r\n  }\r\n\r\n  hide(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    this.passwordTarget.type = \"password\";\r\n  }\r\n\r\n  toggle(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    if (this.passwordTarget.type === \"password\") {\r\n      this.peak();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n}\r\n","import {useDebounce, useWindowResize} from \"stimulus-use\";\nimport {WindowResizePayload} from \"stimulus-use/dist/use-window-resize/use-window-resize\";\nimport {BaseController} from \"./base_controller\";\n\ninterface ResponsiveIframeMessage {\n  name: string,\n  height: number,\n}\n\nexport class ResponsiveIframeWrapperController extends BaseController {\n\n  boundMessageReceived = this.messageReceived.bind(this);\n\n  connect() {\n    window.addEventListener(\"message\", this.boundMessageReceived);\n  }\n\n  disconnect() {\n    window.removeEventListener(\"message\", this.boundMessageReceived);\n  }\n\n  messageReceived(message: MessageEvent<ResponsiveIframeMessage>) {\n    let data = message.data;\n    if (data.hasOwnProperty(\"name\") && data.name === \"iframe-body\" && data.hasOwnProperty(\"height\")) {\n      this.resize(data.height);\n    }\n  }\n\n  resize(height: number) {\n    (this.element as HTMLIFrameElement).style.height = `${height}px`;\n  }\n\n}\n\nexport class ResponsiveIframeBodyController extends BaseController {\n\n  static debounces = [\"postUpdate\"];\n\n  declare observe: () => void;\n  declare unobserve: () => void;\n\n  connect() {\n    // If this Window is inside a frame\n    if (window.self !== window.top) {\n      useWindowResize(this);\n      useDebounce(this, {});\n      this.postUpdate();\n    } else {\n      // Not an iframe\n    }\n  }\n\n  windowResize(payload: WindowResizePayload) {\n    this.postUpdate();\n  };\n\n  postUpdate() {\n    let payload: ResponsiveIframeMessage = {name: \"iframe-body\", height: this.getHeight()};\n    window.parent.postMessage(\n      payload,\n      \"*\",\n    );\n  }\n\n  getHeight(): number {\n    const body = document.body;\n    const html = document.documentElement;\n\n    // Get the largest height out of body and html's various height measurements\n    return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n  }\n\n}\n","import camelCase from \"lodash.camelcase\";\r\nimport {BaseController} from \"../base_controller\";\r\n\r\nexport class EphemeralController extends BaseController {\r\n\r\n  cleanupSelf() {\r\n    this.cleanup(this.element as HTMLElement);\r\n  }\r\n\r\n  cleanup(element: HTMLElement) {\r\n    element.dataset.controller = element.dataset.controller?.replaceAll(new RegExp(`(\\s|^)${this.identifier}(\\s|$)`, \"g\"), \"\") || \"\";\r\n    if (element.dataset.controller == \"\") {\r\n      // If there are no controllers left, remove the attribute\r\n      delete element.dataset.controller;\r\n    }\r\n\r\n    let substringIdentifierValueRegex = new RegExp(`(\\s|^)${this.identifier}\\\\..+?(\\s|$)`, \"g\");\r\n    element.dataset.target = element.dataset.target?.replaceAll(substringIdentifierValueRegex, \"\") || \"\";\r\n    delete element.dataset[camelCase(`${this.identifier}-target`)];\r\n    if (element.dataset.target == \"\") {\r\n      // If there are no targets left, remove the attribute\r\n      delete element.dataset.target;\r\n    }\r\n\r\n    element.dataset.action = element.dataset.target?.replaceAll(substringIdentifierValueRegex, \"\") || \"\";\r\n    delete element.dataset[camelCase(`${this.identifier}-action`)];\r\n    if (element.dataset.action == \"\") {\r\n      // If there are no actions left, remove the attribute\r\n      delete element.dataset.action;\r\n    }\r\n\r\n    // @ts-ignore\r\n    let values = this.constructor.values;\r\n    if (values) {\r\n      Object.keys(values).forEach(val => delete element.dataset[camelCase(`${this.identifier}-${val}-value`)]);\r\n    }\r\n\r\n    // @ts-ignore\r\n    let classes = this.constructor.classes;\r\n    if (classes) {\r\n      Object.keys(classes).forEach(val => delete element.dataset[camelCase(`${this.identifier}-${val}-class`)]);\r\n    }\r\n  }\r\n\r\n}\r\n","const smoothSupported = \"scrollBehavior\" in document.documentElement.style;\r\nlet smoothPolyfilled: boolean;\r\n\r\nexport async function scrollToElement(element: Element, {behavior = \"smooth\", block = \"start\", inline = \"nearest\"}: ScrollIntoViewOptions = {}) {\r\n  if (behavior == \"smooth\" && !smoothSupported) {\r\n    await polyfillSmooth();\r\n  }\r\n  element.scrollIntoView({behavior, block, inline});\r\n}\r\n\r\nasync function polyfillSmooth() {\r\n  const {polyfill} = await import(/* webpackChunkName: \"smoothscroll-polyfill\" */ \"smoothscroll-polyfill\");\r\n  if (smoothPolyfilled) {\r\n    return;\r\n  }\r\n  smoothPolyfilled = true;\r\n  polyfill();\r\n}\r\n\r\nexport function getScrollParent(node: HTMLElement | null): HTMLElement | null {\r\n  if (!node) {\r\n    return null;\r\n  }\r\n  const overflowY = getComputedStyle(node).overflowY;\r\n  const isScrollable = overflowY !== \"visible\" && overflowY !== \"hidden\";\r\n\r\n  if (isScrollable && node.scrollHeight >= node.clientHeight) {\r\n    return node;\r\n  }\r\n\r\n  return getScrollParent(node.parentElement) || document.body;\r\n}\r\n","import {EphemeralController} from \"./utilities/ephemeral_controller\";\r\nimport {scrollToElement} from \"./utilities/scroll\";\r\n\r\nexport class ScrollIntoFocusController extends EphemeralController {\r\n\r\n  static values = {\r\n    behavior: String,\r\n    block: String,\r\n    inline: String,\r\n  };\r\n\r\n  declare behaviorValue: ScrollBehavior;\r\n  declare hasBehaviorValue: boolean;\r\n  declare blockValue: ScrollLogicalPosition;\r\n  declare hasBlockValue: boolean;\r\n  declare inlineValue: ScrollLogicalPosition;\r\n  declare hasInlineValue: boolean;\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      // Attempt smooth scrolling, with polyfill\r\n      scrollToElement(\r\n        this.element,\r\n        {\r\n          behavior: this.hasBehaviorValue ? this.behaviorValue : \"smooth\",\r\n          block: this.hasBlockValue ? this.blockValue : \"center\",\r\n          inline: this.hasInlineValue ? this.inlineValue : \"center\",\r\n        },\r\n      ).catch(() => this.element.scrollIntoView()); // Fallback to snap-scrolling\r\n      this.cleanupSelf();\r\n    });\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"./base_controller\";\r\nimport {getScrollParent, scrollToElement} from \"./utilities/scroll\";\r\n\r\nexport class ScrollToBottomController extends BaseController {\r\n\r\n  static values = {\r\n    mode: String,\r\n  };\r\n\r\n  declare modeValue: \"nearest\" | \"document\";\r\n  declare hasModeValue: boolean;\r\n\r\n\r\n  scroll(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    let mode = this.hasModeValue ? this.modeValue : \"document\";\r\n    let target: null | HTMLElement;\r\n    if (mode == \"document\") {\r\n      target = document.body;\r\n    } else {\r\n      target = getScrollParent(this.element as HTMLElement);\r\n    }\r\n    if (target == null) {\r\n      return;\r\n    }\r\n    scrollToElement(target!, {behavior: \"smooth\", block: \"end\"}).catch(() => target!.scrollIntoView(false));\r\n  }\r\n\r\n}\r\n\r\n","import {BaseController} from \"./base_controller\";\r\nimport {scrollToElement} from \"./utilities/scroll\";\r\n\r\nexport class ScrollToController extends BaseController {\r\n\r\n  static values = {\r\n    selector: String,\r\n    behavior: String,\r\n    block: String,\r\n    inline: String,\r\n  };\r\n\r\n  declare selectorValue: string;\r\n  declare behaviorValue: ScrollBehavior;\r\n  declare hasBehaviorValue: boolean;\r\n  declare blockValue: ScrollLogicalPosition;\r\n  declare hasBlockValue: boolean;\r\n  declare inlineValue: ScrollLogicalPosition;\r\n  declare hasInlineValue: boolean;\r\n\r\n\r\n  scroll() {\r\n    let target = document.querySelector(this.selectorValue);\r\n    if (!target) {\r\n      console.warn(`Could not find target for '${this.selectorValue}'`);\r\n      return;\r\n    }\r\n\r\n    scrollToElement(\r\n      target!,\r\n      {\r\n        behavior: this.hasBehaviorValue ? this.behaviorValue : \"smooth\",\r\n        block: this.hasBlockValue ? this.blockValue : \"center\",\r\n        inline: this.hasInlineValue ? this.inlineValue : \"center\",\r\n      },\r\n    ).catch(() => target!.scrollIntoView()); // Fallback to snap-scrolling\r\n  }\r\n\r\n}\r\n","import {BaseController} from \"./base_controller\";\nimport {getScrollParent, scrollToElement} from \"./utilities/scroll\";\n\nexport class ScrollToTopController extends BaseController {\n\n  static values = {\n    mode: String,\n  };\n\n  declare modeValue: \"nearest\" | \"document\";\n  declare hasModeValue: boolean;\n\n\n  scroll(event?: Event) {\n    if (event) {\n      event.preventDefault();\n    }\n    let mode = this.hasModeValue ? this.modeValue : \"document\";\n    let target: null | HTMLElement;\n    if (mode == \"document\") {\n      target = document.body;\n    } else {\n      target = getScrollParent(this.element as HTMLElement);\n    }\n    if (target == null) {\n      return;\n    }\n    scrollToElement(target!, {behavior: \"smooth\", block: \"start\"}).catch(() => target!.scrollIntoView(false));\n  }\n\n}\n\n","import {BaseController} from \"./base_controller\";\r\n\r\nexport class SelfDestructController extends BaseController {\r\n\r\n  static values = {seconds: Number};\r\n\r\n  declare readonly secondsValue: number;\r\n  timeout: null | ReturnType<typeof setTimeout> = null;\r\n\r\n  connect() {\r\n    requestAnimationFrame(() => {\r\n      // Only start countdown on first paint\r\n      this.timeout = setTimeout(() => this.element.remove(), this.secondsValue * 1000);\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.timeout) {\r\n      clearTimeout(this.timeout);\r\n    }\r\n  }\r\n\r\n}\r\n","import {EphemeralController} from \"./utilities/ephemeral_controller\";\r\n\r\nexport class TeleportController extends EphemeralController {\r\n\r\n  static values = {target: String, insert: String, immediate: Boolean};\r\n\r\n  declare readonly immediateValue: boolean;\r\n  declare readonly hasImmediateValue: boolean;\r\n  declare readonly targetValue: string;\r\n  declare readonly hasInsertValue: boolean;\r\n  declare readonly insertValue: InsertPosition | \"replaceOuter\" | \"replaceInner\" | \"prepend\" | \"append\";\r\n\r\n  connect() {\r\n    if (!this.hasInsertValue) {\r\n      throw new Error(\"`insert` value was not specified\");\r\n    }\r\n\r\n    requestAnimationFrame(() => {\r\n      if (this.hasImmediateValue && this.immediateValue) {\r\n        this.execute();\r\n      }\r\n    });\r\n  }\r\n\r\n  execute(event?: Event) {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    let destination = document.querySelector(this.targetValue);\r\n\r\n    if (destination == null) {\r\n      this.element.dispatchEvent(new CustomEvent(\"teleport:error\", {bubbles: true, cancelable: true}));\r\n      return;\r\n    }\r\n\r\n    let copy = this.element.cloneNode(true) as HTMLElement;\r\n    this.cleanup(copy);\r\n\r\n    switch (this.insertValue) {\r\n      case \"beforebegin\":\r\n      case \"beforeend\":\r\n      case \"afterend\":\r\n      case \"afterbegin\":\r\n        destination.insertAdjacentHTML(this.insertValue, copy.outerHTML);\r\n        break;\r\n      case \"replaceOuter\":\r\n        destination.outerHTML = copy.outerHTML;\r\n        break;\r\n      case \"replaceInner\":\r\n        destination.innerHTML = copy.outerHTML;\r\n        break;\r\n      case \"prepend\":\r\n        destination.insertAdjacentHTML(\"afterbegin\", copy.outerHTML);\r\n        break;\r\n      case \"append\":\r\n        destination.insertAdjacentHTML(\"beforeend\", copy.outerHTML);\r\n        break;\r\n      default:\r\n        throw new Error(\"`insert` value was not specified\");\r\n\r\n    }\r\n    this.element.remove();\r\n  }\r\n\r\n}\r\n","import {useClickOutside, useHover} from \"stimulus-use\";\nimport {BaseController} from \"./base_controller\";\n\nexport type ToggleClassMode = \"on\" | \"off\" | \"toggle\"\n\nexport class ToggleClassController extends BaseController {\n\n  static targets = [\"toggle\"];\n  static values = {\n    class: String,\n    mouseEnter: String,\n    mouseLeave: String,\n    clickAway: Boolean,\n    initial: String,\n  };\n\n  declare readonly toggleTargets: HTMLElement[];\n\n  declare readonly classValue: string;\n  declare readonly hasClassValue: boolean;\n\n  declare readonly mouseEnterValue: ToggleClassMode;\n  declare readonly hasMouseEnterValue: boolean;\n\n  declare readonly mouseLeaveValue: ToggleClassMode;\n  declare readonly hasMouseLeaveValue: boolean;\n\n  declare readonly clickAwayValue: boolean;\n  declare readonly hasClickAwayValue: boolean;\n\n  declare readonly initialValue: \"on\" | \"off\";\n  declare readonly hasInitialValue: boolean;\n\n  connect() {\n    if (!this.hasClassValue) {\n      throw new Error(\"data-toggle-class-class-value must not be empty\");\n    }\n\n    if (this.hasMouseEnterValue || this.hasMouseLeaveValue) {\n      useHover(this);\n    }\n\n    if (this.hasClickAwayValue && this.clickAwayValue) {\n      useClickOutside(this);\n    }\n\n    requestAnimationFrame(() => {\n      if (this.hasInitialValue) {\n        if (this.initialValue === \"on\") {\n          this.toggleTargets.forEach((target) => this.elementOn(target));\n        } else {\n          this.toggleTargets.forEach((target) => this.elementOff(target));\n        }\n      }\n    });\n  }\n\n  clickOutside() {\n    this.toggleTargets.forEach((target) => {\n      if (this.elementWasToggled(target)) {\n        this.elementToggleStatus(target);\n        this.elementToggle(target);\n      }\n    });\n  }\n\n  mouseEnter() {\n    if (this.hasMouseEnterValue) {\n      switch (this.mouseEnterValue) {\n        case \"on\":\n          this.on();\n          break;\n        case \"off\":\n          this.off();\n          break;\n        case \"toggle\":\n          this.toggle();\n          break;\n      }\n    }\n    return {};\n  }\n\n  mouseLeave() {\n    if (this.hasMouseLeaveValue) {\n      switch (this.mouseLeaveValue) {\n        case \"on\":\n          this.on();\n          break;\n        case \"off\":\n          this.off();\n          break;\n        case \"toggle\":\n          this.toggle();\n          break;\n      }\n    }\n    return {};\n  }\n\n  on(event?: Event) {\n    this.toggleTargets.forEach((target) => {\n      this.elementToggleStatus(target);\n      this.elementOn(target);\n    });\n  }\n\n  off(event?: Event) {\n    this.toggleTargets.forEach((target) => {\n      this.elementToggleStatus(target);\n      this.elementOff(target);\n    });\n  }\n\n  toggle(event?: Event) {\n    this.toggleTargets.forEach((target) => {\n      this.elementToggleStatus(target);\n      this.elementToggle(target);\n    });\n  }\n\n  private elementWasToggled(el: HTMLElement): boolean {\n    return el.dataset.toggled == \"true\";\n  }\n\n  private elementToggleStatus(el: HTMLElement) {\n    if (this.elementWasToggled(el)) {\n      delete el.dataset.toggled;\n    } else {\n      el.dataset.toggled = \"true\";\n    }\n  }\n\n  private elementToggle(el: HTMLElement) {\n    let classes = this.classValue.split(\" \");\n    classes.forEach((klass) => el.classList.toggle(klass));\n  }\n\n  private elementOn(el: HTMLElement) {\n    let classes = this.classValue.split(\" \");\n    classes.forEach((klass) => el.classList.toggle(klass, true));\n  }\n\n  private elementOff(el: HTMLElement) {\n    let classes = this.classValue.split(\" \");\n    classes.forEach((klass) => el.classList.toggle(klass, false));\n  }\n\n}\n","import {BaseController} from \"./base_controller\";\r\n\r\nexport class WordCountController extends BaseController {\r\n\r\n  static targets = [\"input\", \"output\"];\r\n  static values = {min: Number, max: Number};\r\n  static classes = [\"error\"];\r\n\r\n  declare readonly inputTarget: HTMLInputElement | HTMLTextAreaElement;\r\n  declare readonly outputTarget: HTMLElement;\r\n  declare minValue: number;\r\n  declare hasMinValue: boolean;\r\n  declare maxValue: number;\r\n  declare hasMaxValue: boolean;\r\n  declare errorClass: string;\r\n  declare hasErrorClass: boolean;\r\n\r\n  boundHandler = this.updateWordCount.bind(this);\r\n\r\n  connect() {\r\n    this.updateWordCount();\r\n    this.inputTarget.addEventListener(\"input\", this.boundHandler);\r\n  }\r\n\r\n  disconnect() {\r\n    this.inputTarget.removeEventListener(\"input\", this.boundHandler);\r\n  }\r\n\r\n  updateWordCount() {\r\n    let wordCount = 0;\r\n    let textAreaValue = this.inputTarget.value;\r\n    let matches = textAreaValue.match(/\\S+/g);\r\n    wordCount = (matches && matches.length) || 0;\r\n    this.outputTarget.innerText = wordCount.toString();\r\n    if (this.hasErrorClass) {\r\n      if (this.isValidCount(wordCount)) {\r\n        this.outputTarget.classList.remove(this.errorClass);\r\n      } else {\r\n        this.outputTarget.classList.add(this.errorClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  isValidCount(count: number) {\r\n    let min = 0;\r\n    let max = 99999;\r\n\r\n    if (this.hasMinValue) {\r\n      min = this.minValue;\r\n    }\r\n\r\n    if (this.hasMaxValue) {\r\n      max = this.maxValue;\r\n    }\r\n\r\n    return count >= min && count <= max;\r\n  }\r\n\r\n}\r\n"],"names":["BaseController","Controller","log","functionName","args","this","application","debug","logger","console","groupCollapsed","identifier","element","groupEnd","AsyncBlockController","connect","loadContent","el","hasReplaceTarget","replaceTarget","fetch","endpointValue","then","response","text","html","newEl","document","createElement","innerHTML","replaceWith","event","CustomEvent","detail","dispatchEvent","catch","err","finally","endpoint","String","AutoSubmitFormController","constructor","handler","bind","querySelectorAll","forEach","addEventListener","boundHandler","disconnect","removeEventListener","e","bubbles","cancelable","method","controller","methodName","composeEventName","name","eventPrefix","composedName","extendedEvent","type","composed","Object","assign","originalEvent","defaultOptions","events","onlyVisible","StimulusUse","[object Object]","options","_a","_b","_c","controllerId","stimulusUseDebug","id","dataset","controllerInitialize","initialize","controllerConnect","controllerDisconnect","UseHover","super","observe","targetElement","onEnter","onLeave","unobserve","call","hover","enhanceController","UseMutation","observer","error","handleError","mutation","entries","MutationObserver","useWindowResize","callback","innerWidth","innerHeight","window","payload","height","Infinity","width","debounce","fn","wait","timeoutId","arguments","context","apply","clearTimeout","setTimeout","AutosizeController","target","style","resize","boxSizing","requestAnimationFrame","windowResize","autosize","offset","offsetHeight","clientHeight","scrollHeight","CharCountController","updateCharCount","inputTarget","charCount","value","length","outputTarget","innerText","toString","hasErrorClass","isValidCount","classList","remove","errorClass","add","count","min","max","hasMinValue","minValue","hasMaxValue","maxValue","Number","ClipboardController","supported","queryCommandSupported","hasRemoveUnusedValue","removeUnusedValue","hasFallbackTarget","fallbackTarget","hasCopyTarget","copyTarget","select","preventDefault","sourceTarget","copy","execCommand","removeUnused","Boolean","ConfirmNavigationController","confirmMessage","messageValue","onbeforeunload","handlePopstate","message","DebugController","testTargets","DetectDirtyController","initialValue","isInputElement","isCheckable","checked","restore","setAttribute","removeAttribute","tagName","DisableInputsController","toggle","hasDisablerTarget","disablerTarget","disableInputs","enableInputs","disableTargets","_","disabled","DismissableController","dismiss","EmptyDomController","useMutation","childList","checkEmpty","mutate","children","hasScopeSelectorValue","scopeSelectorValue","hasNotEmptyClass","notEmptyClass","split","klass","hasEmptyClass","emptyClass","scopeSelector","EnableInputsController","hasEnablerTarget","enablerTarget","enableTargets","FallbackImageController","onerror","hasPlaceholderValue","src","placeholderValue","display","placeholder","LazyBlockController","threshold","IntersectionObserver","entry","isIntersecting","isVisible","eventName","appearEvent","dispatchAppear","disappearEvent","dispatchDisappear","useIntersection","appear","LimitedSelectionCheckboxesController","handleInputs","inputTargets","boundHandleInputs","tickedInputs","reduce","previousValue","maxSelections","hasErrorTarget","errorTarget","PasswordConfirmController","checkPasswordsMatch","passwordTargets","boundCheckPasswordsMatch","allPasswordsMatch","values","Set","map","has","size","PasswordPeekController","peak","passwordTarget","hide","ResponsiveIframeWrapperController","messageReceived","boundMessageReceived","data","hasOwnProperty","ResponsiveIframeBodyController","self","top","debounces","func","postUpdate","getHeight","parent","postMessage","body","documentElement","Math","EphemeralController","cleanupSelf","cleanup","replaceAll","RegExp","substringIdentifierValueRegex","camelCase","action","keys","val","classes","smoothSupported","smoothPolyfilled","scrollToElement","behavior","block","inline","async","polyfill","polyfillSmooth","scrollIntoView","getScrollParent","node","overflowY","getComputedStyle","parentElement","ScrollIntoFocusController","hasBehaviorValue","behaviorValue","hasBlockValue","blockValue","hasInlineValue","inlineValue","ScrollToBottomController","scroll","hasModeValue","modeValue","mode","ScrollToController","querySelector","selectorValue","warn","selector","ScrollToTopController","SelfDestructController","timeout","secondsValue","seconds","TeleportController","hasInsertValue","Error","hasImmediateValue","immediateValue","execute","destination","targetValue","cloneNode","insertValue","insertAdjacentHTML","outerHTML","insert","immediate","ToggleClassController","hasClassValue","hasMouseEnterValue","hasMouseLeaveValue","useHover","hasClickAwayValue","clickAwayValue","onEvent","contains","rect","getBoundingClientRect","windowHeight","windowWidth","clientWidth","left","isElementInViewport","clickOutside","clickOutsideEvent","useClickOutside","hasInitialValue","toggleTargets","elementOn","elementOff","elementWasToggled","elementToggleStatus","elementToggle","mouseEnter","mouseEnterValue","on","off","mouseLeave","mouseLeaveValue","toggled","classValue","class","clickAway","initial","WordCountController","updateWordCount","wordCount","matches","match"],"mappings":"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"}